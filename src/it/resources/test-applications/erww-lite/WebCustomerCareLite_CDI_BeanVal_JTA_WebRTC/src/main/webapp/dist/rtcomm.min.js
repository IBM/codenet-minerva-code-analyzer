/*! lib.rtcomm.clientjs 1.0.3 02-11-2015 16:31:22 UTC */
console.log("lib.rtcomm.clientjs 1.0.3 02-11-2015 16:31:21 UTC"),function(a,b){"function"==typeof define&&define.amd?define([],function(){return a.returnExportsGlobal=b()}):"object"==typeof exports?module.exports=b():(a.rtcomm=a.rtcomm||{},a.rtcomm.util=b())}(this,function(){var a={},b=a,c=function(){var a={MESSAGE:1,INFO:2,EVENT:4,DEBUG:7,TRACE:15},b="INFO";this.l=function(c,d){var e=d&&d.getLogLevel?d.getLogLevel():b;return(a[e]&a[c])===a[c]},this.log=function(a){console.log(a)},this.setLogLevel=this.s=function(c){if(!(c in a))throw new Error(c+"is not a valid Log level, try: "+JSON.stringify(a));b=c},this.getLogLevel=this.g=function(){return b}},d=d||new c,e=d.l,f=function(a,b){for(var c in b){if(!a.hasOwnProperty(c))throw new Error("Parameter ["+c+"] is missing in config object");if(b[c]!==typeof a[c]){if("number"===b[c]&&a[c]===parseInt(a[c]).toString())continue;throw e("INFO")&&console.log("Typeof "+c+" is incorrect. "+typeof a[c]+"  Should be a "+b[c]),new Error("Typeof "+c+" is incorrect. "+typeof a[c]+"  Should be a "+b[c])}}return!0},g=function(a,b,c){var d=[];for(var e in b)if(b.hasOwnProperty(e)){if(e.match(/^_/))continue;if(e.toUpperCase()===e)continue;d.push(e)}for(var f in a){if(!a.hasOwnProperty(f)||-1===d.indexOf(f)&&!c)throw new Error(f+" is an invalid property for "+b);b[f]=a[f]}return!0},h=function(a,b){e("DEBUG")&&console.log(this+".setConfig() passed in: -->  "+JSON.stringify(a));var c=b.required||{},g=b.optional||{},h=b.defaults||{};if(a){c&&f(a,c),a.logLevel&&(d.setLogLevel(a.logLevel),delete a.logLevel);var j=g?i(c,g):c;for(var k in j)j.hasOwnProperty(k)&&(j[k]=h.hasOwnProperty(k)?h[k]:null);k=null;for(k in a){if(!a.hasOwnProperty(k)||!j.hasOwnProperty(k))throw new Error(k+" is an invalid property for "+JSON.stringify(j));if(a[k]&&"object"==typeof a[k])j[k]=i(a[k],j[k]);else{var l=c[k]||g[k]||null;j[k]="number"===l?parseInt(a[k]):a[k]}}return e("DEBUG")&&console.log(this+".setConfig() Returning -->  "+JSON.stringify(j)),j}throw new Error("A minumum config is required: "+JSON.stringify(c))},i=function(a,b){var c=[],d={};for(var e in a)a.hasOwnProperty(e)&&c.push(e);e=null;for(e in b)b.hasOwnProperty(e)&&c.push(e);return c.forEach(function(c){d[c]=a[c]?a[c]:b[c]}),d},j=function(a){var b={};return Object.keys(a).forEach(function(c){b[c]=a[c]}),b},k=function(a,b,c){function d(){if(e("DEBUG")&&console.log("whenTrue -- waiting: "+g),g>f)return b(!1),!1;var c=a();return c?(e("DEBUG")&&console.log("whenTrue TRUE",c),b(c),!0):(setTimeout(d,h),void(g+=h))}e("DEBUG")&&console.log("whenTrue!",a,b,c);var f=c||500,g=0,h=50;d()},l=function(a){var b=(new Date).getTime(),c=a.replace(/[xy]/g,function(a){var c=(b+16*Math.random())%16|0;return b=Math.floor(b/16),("x"===a?c:7&c|8).toString(16)});return c},m=function(){return l("xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx")},n=function(a,b){for(var c=[],d=0;d<a.length;d++)for(var e=0;e<b.length;e++)a[d]===b[e]&&c.push(a[d]);return c};a.Log=c,a.validateConfig=f,a.setConfig=h,a.applyConfig=g,a.generateUUID=m,a.generateRandomBytes=l,a.whenTrue=k,a.makeCopy=j,a.combineObjects=i,a.commonArrayItems=n;var o={setState:function(a,b){"undefined"!=typeof this.state?this.state!==a?(this.state=a,this.emit(a,b)):e("DEBUG")&&console.log(this+".setState():  State already set, ignoring "+a):this.emit(a,b)},listEvents:function(){console.log("******* "+this+" Configured events ***********");for(var a in this.events)this.events.hasOwnProperty(a)&&console.log("******* ["+a+"] has "+this.events[a].length+" listeners registered")},clearEventListeners:function(){for(var a in this.events)this.events.hasOwnProperty(a)&&(this.events[a]=[])},createEvent:function(a){if(!this.hasOwnProperty("events"))throw new Error("createEvent() requires an events property to store the events");this.events[a]=[]},removeEvent:function(a){a in this.events&&delete this.events[a]},hasEventListener:function(a){return a in this.events&&this.events[a].length>0},on:function(a,b){if(!this.events)throw new Error("on() requires an events property listing the events. this.events["+a+"] = [];");if("object"==typeof a)for(var c in a)a.hasOwnProperty(c)&&this.events[c]&&Array.isArray(this.events[c])&&(e("EVENT",this)&&console.log(this+" Adding a listener callback for event["+c+"]"),e("TRACE",this)&&console.log(this+" Callback for event["+c+"] is",a[c]),this.events[c].push(a[c]));else this.events[a]&&Array.isArray(this.events[a])&&(e("EVENT",this)&&console.log(this+" Adding a listener callback for event["+a+"]"),e("TRACE",this)&&console.log(this+" Callback for event["+a+"] is",b),this.events[a].push(b))},bubble:function(a){if(this.events)for(var b in this.events)this.events.hasOwnProperty(b)&&this.events[b].push(a)},off:function(a){this.events&&this.events[a]&&(e("EVENT",this)&&console.log(this+" Removing listeners for event["+a+"]"),this.events[a]=[])},emit:function(a,b){var c=b||{},d=this;if(this._Event&&"function"==typeof this._Event&&(c=this._Event(a,c)),!this.events||!this.events[a])throw new Error("emit() requires an events property listing the events. this.events["+a+"] = [];");e("EVENT",this)&&console.log(this+".emit()  for event["+a+"]",d.events[a].length),"undefined"!=typeof d.lastEvent&&(d.lastEvent=a),d.events[a].forEach(function(b){if("function"==typeof b){e("EVENT",d)&&console.log(d+".emit()  executing callback for event["+a+"]");try{b(c)}catch(f){var g="Event["+a+"] callback failed with message: "+f.message;throw new Error(g)}}else e("EVENT",d)&&console.log(d+" Emitting, but no callback for event["+a+"]")})},extend:function(a){var b,c;c=Object.create(this);for(b in a)a.hasOwnProperty(b)&&(c[b]=a[b]);return c},_l:function(a){return"function"==typeof e?e(a,this):"unknown"},toString:function(){var a=this._&&this._.objName?this._.objName:this.objName||this.name||"Unknown",b=this._&&this._.id?this._.id:this.id||"Unknown";return a+"["+b+"]"}};a.RtcommBaseObject=o;var p=function(a){this.name="RtcommError",this.message=a||"RTCOMM: Default error message"};p.prototype=Object.create(Error.prototype),p.prototype.constructor=p,a.RtcommError=p;var q=function(){var a=null;"undefined"!=typeof navigator&&"undefined"!=typeof window&&(window.AudioContext=window.AudioContext||window.webkitAudioContext,a=a||window.AudioContext?new AudioContext:null);var b=function c(b){return this instanceof c?(this.context=a,this.url=b,this.buffer=null,this.loaded=!1,void(this.playing=null)):new c(b)};return b.prototype=function(){var a=function(a){var b=this;if(b.url&&b.context){var c=new XMLHttpRequest;c.open("GET",b.url,!0),c.responseType="arraybuffer",c.onload=function(){b.context.decodeAudioData(c.response,function(c){e("DEBUG")&&console.log("Sound: successfully loaded buffer "+b.url),b.buffer=c,a&&a()},function(a){console.error("Unable to load the url: ",a)})},c.send()}else e("DEBUG")&&console.log("Sound.play() Unsupported in this environment");return b},b=function(){var a=this,b=function(){if(a.context)if(a.playing)e("DEBUG")&&console.log("Sound.play() Already playing...");else{var b=a.context.createBufferSource();b.buffer=a.buffer,b.connect(a.context.destination),b.loop=!0,b.start(0),a.playing=b}else e("DEBUG")&&console.log("Sound.play() Unsupported in this environment")};return a.buffer?b():(e("DEBUG")&&console.log("Sound: Unable to play, Load is not complete -- will try 1 time in .5 seconds:",a),setTimeout(b,500)),a},c=function(){return console.log("Sound.stop() stop called, are we playing?",this.playing),this.playing?(this.playing.stop(),this.playing=null):console.log("Sound.stop() -- Nothing playing"),this};return{load:a,play:b,stop:c}}(),b}();return a.Sound=q,b}),function(a,b){"function"==typeof define&&define.amd?define(["./util"],function(c){return a.returnExportsGlobal=b(c)}):"object"==typeof exports?module.exports=b(require("util")):(a.rtcomm=a.rtcomm||{},a.rtcomm.connection=b(rtcomm.util))}(this,function(a){var b={},c=b,d=new a.Log,e=d.s,f=d.g,g=d.l,h=a.generateUUID,i=a.generateRandomBytes,j=(a.validateConfig,a.applyConfig,a.setConfig),k=function(a){g("TRACE")&&console.log("uidRoute called w/ id "+a);var b={route:null,userid:null},c=new RegExp(/(\w+)\:(\S+)/),d=c.exec(a);if(d){if(3!==d.length)throw new Error("Unable to process userid: "+a);b.route=d[1],b.userid=d[2]}else b.userid=d;return g("TRACE")&&console.log("uidRoute returning ",b),b},l=function(a,b){g("TRACE")&&console.log("routeLookup() finding scheme: "+b);var c=null;for(var d in a)if(g("TRACE")&&console.log("routeLookup() searching key: "+d),a.hasOwnProperty(d)&&(g("TRACE")&&console.log("routeLookup() searching key: ",a[d]),"undefined"!=typeof a[d].schemes&&"undefined"!=typeof a[d].topic&&a[d].schemes.indexOf(b)>=0)){c=a[d].topic;break}return g("TRACE")&&console.log("routeLookup() returing topic: "+c),c},m=function(b){function c(a){a=a||!1;var b={},c=5e3,d=function(a){a.timer&&(g("DEBUG")&&console.log(a+" Timer: Clearing existing Timer: "+a.timer+"item.timeout: "+a.timeout),clearTimeout(a.timer));var d=a.timeout||c;a.timer=setTimeout(function(){if(a.id in b){var c=a.objName+" "+a.timer+" Timed out ["+a.id+"] after  "+d+": "+Date();"function"==typeof b[a.id].onFailure?b[a.id].onFailure({reason:c}):g("DEBUG")&&console.log(c),e(a)}},d),g("DEBUG")&&console.log(a+" Timer: Setting Timer: "+a.timer+"item.timeout: "+d)},e=function(a){a.id in b&&(a.clearEventListeners(),a.timer&&clearTimeout(a.timer),g("DEBUG")&&console.log("EndpointConnection  Removing item from registry: ",a),delete b[a.id])},f=function(c){g("TRACE")&&console.log("Registry.add() Adding item to registry: ",c),c.on("finished",function(){this.remove(c)}.bind(this)),c.on("canceled",function(){this.remove(c)}.bind(this)),a&&c.on("timeout_changed",function(){d(c)}.bind(this)),a&&d(c),b[c.id]=c};return{add:f,remove:e,clear:function(){var a=this;Object.keys(b).forEach(function(c){a.remove(b[c])})},list:function(){return Object.keys(b)},find:function(a){return b[a]||null}}}var d=function(a){var b=new o(a);return b},e=function(b){var c=this,d=b.topic,e=b.content,f=b.fromEndpointID,h=null;try{h=n.cast(e),g("DEBUG")&&console.log(this+".processMessage() processing Message",h),h.fromEndpointID=f}catch(i){g("DEBUG")&&console.log(this+".processMessage() Unable to cast message, emitting original message",i),g("DEBUG")&&console.log(this+".processMessage() Unable to cast message, emitting original message",b)}if(h&&h.transID)if("RESPONSE"===h.method){g("TRACE")&&console.log(this+".processMessage() this is a RESPONSE",h);var j=c.transactions.find(h.transID);if(j)g("TRACE")&&console.log(this+".processMessage() existing transaction: ",j),j.finish(h);else if("SERVICE_QUERY"===h.orig){var k=new a.RtcommError("There are multiple rtcomm hosts listening on the same topic:"+c.config.rtcommTopicPath+"  Create a unique topic for the client and server and try again");k.name="MULTIPLE_SERVERS",c._.onFailure(k),c.disconnect()}else console.error("Transaction ID: ["+h.transID+"] not found, nothing to do with RESPONSE:",h)}else if("START_SESSION"===h.method)c.emit("newsession",c.createSession({message:h,source:d,fromEndpointID:f}));else if("REFER"===h.method){var l=this.createTransaction({message:h,timeout:3e4});c.emit("newsession",c.createSession({message:h,referralTransaction:l,source:d}))}else{var m=c.transactions.find(h.transID);m?m.emit("message",h):g("DEBUG")&&console.log("Dropping message, transaction is gone for message: ",b)}else if(h&&h.sigSessID)c.emit(h.sigSessID,h);else if(h&&"DOCUMENT_REPLACED"===h.method)c.emit("document_replaced",h);else if(b.topic){var o=c.subscriptions;Object.keys(o).forEach(function(a){o[a].regex.test(b.topic)&&(o[a].callback?(g("DEBUG")&&console.log("Emitting Message to listener -> topic "+b.topic),o[a].callback(b)):g("DEBUG")&&console.log("Nothing to do with message, dropping message",b))})}else c.emit("message",b)};this.objName="EndpointConnection",this.events={servicesupdate:[],document_replaced:[],message:[],newsession:[]},this._={},this._.init=!1,this._.presenceTopic=null,this.ready=!1,this.connected=!1;var f="/rtcomm/",h={required:{server:"string",port:"number"},optional:{credentials:"object",myTopic:"string",rtcommTopicPath:"string",managementTopicName:"string",connectorTopicName:"string",userid:"string",appContext:"string",useSSL:"boolean",publishPresence:"boolean",presence:"object"},defaults:{rtcommTopicPath:f,managementTopicName:"management",connectorTopicName:"connector",publishPresence:"false",useSSL:!1,presence:{rootTopic:f+"sphere/",topic:"/"}}};if(!b)throw new Error("EndpointConnection instantiation requires a minimum configuration: "+JSON.stringify(h));this.config=j(b,h),this.id=this.userid=this.config.userid||null;var i={server:this.config.server,port:this.config.port,useSSL:this.config.useSSL,rtcommTopicPath:this.config.rtcommTopicPath,credentials:this.config.credentials||null,myTopic:this.config.myTopic||null};this.sessions=new c,this.transactions=new c(!0),this.subscriptions={},this.appContext=this.config.appContext||"rtcomm",this.services={RTCOMM_CONNECTOR_SERVICE:{}},this._.willMessage=null,this.mqttConnection=d(i),this.mqttConnection.on("message",e.bind(this)),this.config.myTopic=this.mqttConnection.config.myTopic,this._.init=!0};m.prototype=a.RtcommBaseObject.extend(function(){var b=function(a){var b=a.replace(/(\/\+)+$/g,"/#");return b},c=function(a){var b=a.replace(/^\$SharedSubscription.+\/\//,"\\/").replace(/\/\+/g,"\\/.+").replace(/\/#$/g,"($|\\/.+$)").replace(/(\\)?\//g,function(a,b){return b?a:"\\/"});return new RegExp("^"+b+"$")},d=function(a,b){a&&(b.services=a,b.config.connectorTopicName=a.RTCOMM_CONNECTOR_SERVICE.topic||b.config.connectorTopicName)},h=function(){var a="GUEST",b=i("xxxxxx");return a+"-"+b},j={normalizeTopic:function(a,b){if(a){g("TRACE")&&console.log(this+".normalizeTopic topic is: "+a);var c=this.config.rtcommTopicPath;b="boolean"==typeof b?b:!0;var d=b?this.config.userid:"",e=new RegExp("^"+c,"g");a=e.test(a)?a:c+a;var f=new RegExp(d+"$","g");a=f.test(a)?a:a+"/"+d,a=a.replace(/\/+/g,"/")}else{if(!this.config.connectorTopicName)throw new Error("normalize Topic requires connectorTopicName to be set - call serviceQuery?");a=this.normalizeTopic(this.config.connectorTopicName)}return g("TRACE")&&console.log(this+".normalizeTopic returing topic: "+a),a},setLogLevel:e,getLogLevel:f,createMessage:function(a){var b=n.createMessage(a);return b.hasOwnProperty("fromTopic")&&(b.fromTopic=this.config.myTopic),g("DEBUG")&&console.log(this+".createMessage() returned",b),b},createPresenceDocument:function(a){var b=n.createMessage("DOCUMENT");return b.addressTopic=this.getMyTopic(),b.appContext=this.appContext,a&&(b.state=a.state||b.state,b.alias=a.alias||b.alias,b.userDefines=a.userDefines||b.userDefines),b},publishPresence:function(a){if(!this.config.publishPresence)throw new Error("Cannot publish presence if publishPresence != true upon connection creation");return this.publish(this.getMyPresenceTopic(),a,!0),this},createResponse:function(a){var b=n.createResponse(a);return b.result="SUCCESS",b},createTransaction:function(a,b,c){if(!this.connected)throw new Error("not Ready -- call connect() first");var d=new q(a,b,c);return d.endpointconnector=this,g("DEBUG")&&console.log(this+".createTransaction() Transaction created: ",d),this.transactions.add(d),d},createSession:function(a){if(!this.connected)throw new Error("not Ready -- call connect() first");a&&a.remoteEndpointID&&(a.toTopic=this.normalizeTopic(l(this.services,k(a.remoteEndpointID).route)));var b=new p(a);return b.endpointconnector=this,this.createEvent(b.id),this.on(b.id,b.processMessage.bind(b)),this.sessions.add(b),b.on("failed",function(){this.sessions.remove(b)}.bind(this)),b},_query:function(a,b,c,d){var e=b||"payload",f=function(a){if(c&&"function"==typeof c){if(a){var b=a[e]||null;c(b)}}else g("DEBUG")&&console.log("query returned: ",a)},h=function(a){g("DEBUG")&&console.log("Query Failed: ",a),d&&"function"==typeof d?d(a?a.failureReason:"Service Query failed for Unknown reason"):console.error("query failed:",a)};if(this.connected){var i=this.createTransaction({message:a,toTopic:this.config.managementTopicName},f,h);i.start()}else console.error(this+"._query(): not Ready!")},connect:function(a,b){if(g("DEBUG")&&console.log(this+".connect() LWT topic: "+this.getMyPresenceTopic()+" message",this.getLwtMessage()),a="function"==typeof a?a:function(a){g("DEBUG")&&console.log("Success - specify a callback for more information",a)},b="function"==typeof b?b:function(a){console.error("EndpointConnection.connect() failed - specify a callback for more information",a)},!this._.init)throw new Error("not initialized -- call init() first");if(this.connected)throw new Error(this+".connect() is already connected!");var c=function(b){this.connected=!0,g("DEBUG")&&console.log("EndpointConnection.connect() Success, calling callback - service:",b),a(b)},d=function(a){console.error(this+".connect() FAILURE! - ",a),this.connected=!1,b(a)};this._.onFailure=d;var e={onSuccess:c.bind(this),onFailure:d.bind(this)};this.config.publishPresence&&(e.willMessage=this.getLwtMessage(),e.presenceTopic=this.getMyPresenceTopic()),this.mqttConnection.connect(e)},disconnect:function(a){g("DEBUG")&&console.log("EndpointConnection.disconnect() called: ",this.mqttConnection),a="boolean"==typeof a?a:!0,g("DEBUG")&&console.log(this+".disconnect() publishing LWT"),this.connected&&(g("DEBUG")&&console.log(this+".disconnect() We are connected, Cleanup..."),a&&this.publish(this.getMyPresenceTopic(),this.getLwtMessage(),!0),this.sessions.clear(),this.transactions.clear()),this.clearEventListeners(),this.mqttConnection.destroy(),this.mqttConnection=null,this.connected=!1,this.ready=!1},serviceQuery:function(b,c){var e=this,f=null;if(b=b||function(a){g("DEBUG")&&console.log(this+".serviceQuery() Default Success message, use callback to process:",a)},c=c||function(a){g("DEBUG")&&console.log(this+".serviceQuery() Default Failure message, use callback to process:",a)},!this.id)return f=new a.RtcommError("servicQuery requires a userid to be set"),f.name="NO_USER_ID",void c(f);if(this.connected){var h=this.createMessage("SERVICE_QUERY");this._query(h,"services",function(a){g("DEBUG")&&console.log(e+".serviceQuery() calling success callback with",a),d(a,e),e.ready=!0,e.emit("servicesupdate",a),b(a)},function(b){f=new a.RtcommError(b),f.name="SERVICE_QUERY_FAILED",c(f)})}else console.error("Unable to execute service query, not connected")},subscribe:function(a,d){var e=c(b(a));return this.subscriptions[e]={regex:e,callback:d},this.mqttConnection.subscribe(a),e},unsubscribe:function(a){var d=c(b(a));this.mqttConnection&&this.mqttConnection.unsubscribe(a)&&delete this.subscriptions[d]},publish:function(a,b,c){this.mqttConnection.publish(a,b,c)},destroy:function(){g("DEBUG")&&console.log(this+".destroy() Destroying the connection"),this.disconnect()},send:function(a){if(!this.connected)throw new Error("not Ready -- call connect() first");if(a){var b=this.normalizeTopic(a.toTopic);this.mqttConnection.send({message:a.message,toTopic:b})}else console.error("EndpointConnection.send() Nothing to send")},getMyTopic:function(){return this.config.myTopic},setUserID:function(a){return a=a||h(),g("DEBUG")&&console.log(this+".setUserID id is "+a),null===this.id||/^GUEST/.test(this.id)?(this.id=this.userid=this.config.userid=a,a):this.id===a?(g("DEBUG")&&console.log(this+".setUserID() already set to same value: "+a),a):(console.error(this+".setUserID() ID already set, cannot be changed: "+this.id),a)},getUserID:function(){return this.config.userid},getLwtMessage:function(){return this._.willMessage=this._.willMessage||"",this._.willMessage},getMyPresenceTopic:function(){return this._.presenceTopic=this._.presenceTopic||this.normalizeTopic(this.config.presence.rootTopic+this.config.presence.topic,!0),g("DEBUG")&&console.log(this+".getMyPresenceTopic() returning topic: "+this._.presenceTopic),this._.presenceTopic},getPresenceRoot:function(){return g("DEBUG")&&console.log(this+".getPresenceRoot() returning topic: "+this.normalizeTopic(this.config.presence.rootTopic,!1)),this.normalizeTopic(this.config.presence.rootTopic,!1)},useLwt:function(){return this.services.RTCOMM_CONNECTOR_SERVICE&&this.services.RTCOMM_CONNECTOR_SERVICE.sphereTopic?!0:!1}};return j}()),b.EndpointConnection=m;var n=function(){function a(a){var b={};return c(b,h),j.hasOwnProperty(a)?(c(b,j[a]),b):(console.error("Message Type: "+a+" Not found!"),null)}function b(a){var b={};return c(b,h),c(b,k.RESPONSE),l.hasOwnProperty(a)?(c(b,l[a]),b):(console.error("Message Type: "+a+" Not found!"),null)}function c(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])}function d(a){var c=null,d=b(a);if(!d)throw new TypeError("Invalid Message type:"+a+", should be one of: "+Object.keys(j));return c=new m(d)}function e(b){b=b||"MESSAGE";var c=null,d=a(b);if(!d)throw new TypeError("Invalid Message type:"+b+", should be one of: "+Object.keys(j));return c=new m(d)}function f(c){if(g("TRACE")&&console.log("MessageFactory.cast() Attempting to cast message: ",c),"string"==typeof c){g("TRACE")&&console.log("MessageFactory.cast() It is a string... ",c);try{c=JSON.parse(c)}catch(d){throw new TypeError("Unable to cast object as a SigMessage")}g("TRACE")&&console.log("MessageFactory.cast() After JSON.parse... ",c)}var e=null;if(!c.method)throw new TypeError("Unable to cast object as a SigMessage");e="RESPONSE"===c.method?b(c.orig):a(c.method);var f=new m(e);for(var h in c)e.hasOwnProperty(h)||i.hasOwnProperty(h)?f[h]=c[h]:g("DEBUG")&&console.log("MessageFactory.cast() dropped header: "+h);return g("TRACE")&&console.log("MessageFactory.cast() returning casted message:",f),f}var h={rtcommVer:"v1.0.0",method:null,fromTopic:null},i={sigSessID:null,transID:null,reason:null,toEndpointID:null,appContext:null,holdTimeout:null,queuePosition:null},j={SERVICE_QUERY:{method:"SERVICE_QUERY",transID:null},START_SESSION:{method:"START_SESSION",protocols:[],sigSessID:null,transID:null,toEndpointID:null,payload:null},REFER:{method:"REFER",transID:null,toEndpointID:null,details:null},STOP_SESSION:{method:"STOP_SESSION",sigSessID:null,payload:null},PRANSWER:{method:"PRANSWER",protocols:[],payload:null},MESSAGE:{method:"MESSAGE",payload:null},DOCUMENT:{method:"DOCUMENT",type:"ENDPOINT",addressTopic:null,appContext:null,state:null,alias:null,userDefines:[]},DOCUMENT_REPLACED:{method:"DOCUMENT_REPLACED"}},k={RESPONSE:{method:"RESPONSE",orig:null,transID:null,result:null}},l={SERVICE_QUERY:{orig:"SERVICE_QUERY",services:null},START_SESSION:{orig:"START_SESSION",protocols:[],sigSessID:null,result:null,payload:null,transID:null},REFER:{orig:"REFER",transID:null,result:null}},m=function(a){if(a)for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b])};return m.prototype={toJSON:function(){var a={};for(var b in this)this.hasOwnProperty(b)&&(a[b]=this[b]);return a},toString:function(){return JSON.stringify(this.toJSON())}},{createMessage:e,createResponse:d,cast:f}}();b.MessageFactory=n;var o=function(a){var b=function(){for(var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",b=23,c="",d=b-1;d>0;--d)c+=a[Math.floor(Math.random()*(a.length-1))];return c},c=function(a){var b=null;if("undefined"==typeof Paho||"object"!=typeof Paho.MQTT)throw new Error("MqttConnection depends on 'Paho.MQTT' being loaded via mqttws31.js.");return g("DEBUG")&&console.log("MqttConnection createMqttClient using config: ",a),b=new Paho.MQTT.Client(a.server,a.port,a.clientID)},d=function(a,b){var c={content:"",fromEndpointID:"",topic:""};c.content=a.payloadString;var d=a.destinationName.split("/");c.fromEndpointID=d[d.length-1];var e=new RegExp(b);return c.topic=e.test(a.destinationName)?null:a.destinationName,c};this.ERRORS={SSL:{name:"SSL",msg:"useSSL is enabled, but failure occurred connecting to server.  Check server certificate by going to: "},CONNLOST:{name:"CONNLOST",msg:"The Connection the MQTT Server was lost"},CONNREFUSED:{name:"CONNREFUSED",msg:"The connection to the MQTT Server failed(Connection Refused)"}},this.objName="MqttConnection",this.dependencies={},this.config={},this.ready=!1,this.retry=!1,this._init=!1,this.id=null,this.connectOptions=null,this.events={message:[]};var e={required:{server:"string",port:"number",rtcommTopicPath:"string"},optional:{credentials:"object",myTopic:"string",defaultTopic:"string",useSSL:"boolean"}};if(!a)throw new Error("MqttConnection instantiation requires a minimum configuration: "+JSON.stringify(e.required));this.config=j(a,e),this.config.clientID=this.config.myTopic||b(),this.config.myTopic=this.config.myTopic||this.config.rtcommTopicPath+this.config.clientID,this.config.presenceTopic=this.config.presenceTopic||null,this.config.destinationTopic=this.config.defaultTopic?this.config.rtcommTopicPath+this.config.defaultTopic:"",this.id=this.config.clientID,this.ready=!1;var f=this.dependencies.mqttClient=c(this.config),h=this;f.onMessageArrived=function(a){g("TRACE")&&console.log("MQTT Raw message, ",a);var b=d(a,h.config.myTopic);try{g("DEBUG")&&console.log(h+" Received message: "+JSON.stringify(b)),h&&h.emit("message",b)}catch(c){console.error("onMessageArrived callback chain failure:",c)}},this._init=!0};o.prototype=a.RtcommBaseObject.extend(function(){var b=function(a){g("TRACE")&&console.log("MqttConnection: >>>>>>>>>>>> Creating message > ",a);var b=null;return"undefined"!=typeof Paho&&"object"==typeof Paho.MQTT?b=new Paho.MQTT.Message(a&&"object"==typeof a?JSON.stringify(a):"string"==typeof a?a:""):console.error("MqttConnection createMessage, No Paho Client defined"),g("TRACE")&&console.log("MqttConnection: >>>>>>>>>>>> Created message > ",b),b},c={setLogLevel:e,getLogLevel:f,connect:function(c){function d(){m++,q.ready||q.trying||!q.retry||(g("DEBUG")&&console.log(q+".connect() attempting to connect, try:"+m),q.trying=!0,e.connect(a.makeCopy(n)),setTimeout(d,1e3))}if(!this._init)throw new Error("init() must be called before calling connect()");var e=this.dependencies.mqttClient,f=null,h=null,i=null,j=null,k=3,l=5,m=0;g("DEBUG")&&console.log(this+".connect() called with options: ",c),c=this.connectOptions?this.connectOptions:c,c&&(this.connectionOptions=c,f=c.onSuccess||null,h=c.onFailure||null,i=c.willMessage||null,j=c.presenceTopic||null,k=c.mqttVersion||k,l=c.retry||l);var n={};n.mqttVersion=k,this.config.credentials&&this.config.credentials.userName&&(n.userName=this.config.credentials.userName,this.config.credentials.password&&(n.password=this.config.credentials.password)),n.useSSL="boolean"==typeof this.config.useSSL?this.config.useSSL:!1,j&&(n.willMessage=b(i),n.willMessage.destinationName=j,n.willMessage.retained=!0);var o=f||function(){g("DEBUG")&&console.log(this+".connect() was successful, override for more information")}.bind(this),p=h||function(a){g("DEBUG")&&console.log(this+".connect() failed, override for more information",a)}.bind(this);e.onConnectionLost=function(b){var c=null;if(0!==b.errorCode)if(console.error("onConnectionLost",b),c=new a.RtcommError(this.ERRORS.CONNLOST.msg),c.name=this.ERRORS.CONNLOST.name,c.src=b.errorMessage,"function"==typeof p)try{p(c)}catch(d){console.error(d)}else console.error(c)}.bind(this),n.onSuccess=function(){g("DEBUG")&&console.log(this+"mqtt.onSuccess called",e),g("DEBUG")&&console.log(this+"subscribing to: "+this.config.myTopic+"/#");try{e.subscribe(this.config.myTopic+"/#")}catch(a){return void console.error("mqttConnectOptions.onSuccess Subscribe failed: ",a)}if(this.ready=!0,this.retry=!1,this.trying=!1,o&&"function"==typeof o)try{o(this)}catch(a){console.error("connect onSuccess Chain Failure... ",a)}else g("DEBUG")&&console.log("No onSuccess callback... ",o)}.bind(this),n.onFailure=function(b){g("DEBUG")&&console.log(this+".onFailure: MqttConnection.connect.onFailure - Connection Failed... ",b),this.trying=!1,this.retry=l>m?!0:!1;var c=new a.RtcommError(b.errorMessage);if(7===b.errorCode&&(this.config.useSSL?(c=new a.RtcommError(this.ERRORS.SSL.msg+"https://"+this.config.server+":"+this.config.port),c.src=b.errorMessage,this.retry=!1):(c=new a.RtcommError(this.ERRORS.CONNREFUSED.msg+":"+this.config.server+":"+this.config.port),c.src=b.errorMessage)),1===b.errorCode&&(this.retry=!1),"function"==typeof p)try{this.ready||this.retry||p(c)}catch(d){console.error(d)}else console.error(c)}.bind(this);var q=this;this.retry=!0,d()},subscribe:function(a){return a?(this.dependencies.mqttClient.subscribe(a),!0):!1},unsubscribe:function(a){return a?(this.dependencies.mqttClient.unsubscribe(a),!0):!1},publish:function(a,c,d){g("DEBUG")&&console.log(this+".publish() Publishing message",c),g("DEBUG")&&console.log(this+".publish() To Topic: "+a),g("DEBUG")&&console.log(this+".publish() retained?: "+d);var e=b(c);e?(e.destinationName=a,e.retained="boolean"==typeof d?d:!1,this.dependencies.mqttClient.send(e)):g("INFO")&&console.error(this+".publish(): invalid message ")},send:function(c){if(!this.ready)throw new Error("connect() must be called before calling init()");var d=c.message,e=c.toTopic,f=c.onSuccess||function(){g("DEBUG")&&console.log(this+".send was successful, override for more information")}.bind(this),h=(c.onFailure||function(a){g("DEBUG")&&console.log(this+".send failed, override for more information",a)}.bind(this),b(d)),i=this.dependencies.mqttClient;g("TRACE")&&console.log(this+".send using toTopic: "+e),h?(h.destinationName=e,a.whenTrue(function(){return this.ready}.bind(this),function(a){if(a){if(g("MESSAGE")&&console.log(this+".send() Sent message["+e+"]:",d),i.send(h),"function"==typeof f)try{f(null)}catch(b){console.error("An error was thrown in the onSuccess callback chain",b)}}else console.error("MqttConnection.send() failed - Timeout waiting for connect()")}.bind(this),1e3)):g("DEBUG")&&console.log(this+".send(): Nothing to send")},destroy:function(){this.ready=!1;try{this.dependencies.mqttClient.disconnect()}catch(a){g("DEBUG")&&console.log(this+".destroy() failed: "+a)}this.dependencies.mqttClient=null,g("DEBUG")&&console.log(this+".destroy() called and finished")},setDefaultTopic:function(a){this.config.defaultTopic=a;var b=new RegExp("^"+this.config.rtcommTopicPath);this.config.destinationTopic=b.test(a)?this.config.defaultTopic:this.config.rtcommTopicPath+this.config.defaultTopic}};return c}()),b.MqttConnection=o;var p=function(a){this.objName="SigSession",this.endpointconnector=null,this.id=null,this.remoteEndpointID=null,this.message=null,this.source=null,this.protocols=[],this.toTopic=null,this.type="normal",this.referralDetails=null,this.referralTransaction=null,this.appContext=null,a&&(a.message?(this.appContext=a.message.appContext||null,this.source=a.source||null,"START_SESSION"===a.message.method?(g("DEBUG")&&console.log(this+".constructor - inbound message(START_SESSION) config: ",a),this.message=a.message,this.id=a.message.sigSessID,this.remoteEndpointID=a.fromEndpointID||null,this.toTopic=a.toTopic||a.message.fromTopic||null,this.protocols=a.message.protocols):"REFER"===a.message.method?(g("DEBUG")&&console.log(this+".constructor - inbound message(REFER) config: ",a),this.id=a.message.details.sessionID&&a.message.details.sessionID,this.remoteEndpointID=a.message.details.toEndpointID||null,this.referralTransaction=a.referralTransaction):g("DEBUG")&&console.log(this+".constructor - inbound message(unknown) doing nothing -->  config: ",a)):(g("DEBUG")&&console.log(this+".constructor creating session from config: ",a),this.remoteEndpointID=a.remoteEndpointID||null,this.id=this.id||a.id,this.protocols=a.protocols||this.protocols,this.toTopic=this.toTopic||a.toTopic,this.appContext=this.appContext||a.appContext)),this.id=this.id||h(),g("DEBUG")&&console.log(this+".constructor creating session from config: ",a),this.events={starting:[],started:[],failed:[],stopped:[],message:[],queued:[],ice_candidate:[],have_pranswer:[],pranswer:[],finished:[],canceled:[]},this.state="stopped",this.initialTimeout=5e3,this.finalTimeout=3e4};p.prototype=a.RtcommBaseObject.extend(function(){var a={_setupQueue:function(){this._messageQueue={messages:[],processing:!1},this.on("started",this._processQueue.bind(this)),this.on("have_pranswer",this._processQueue.bind(this)),this.on("pranswer",this._processQueue.bind(this))
},_processQueue:function(){var a=this._messageQueue.messages,b=this._messageQueue.processing;b||(b=!0,g("DEBUG")&&console.log(this+"._processQueue processing queue... ",a),a.forEach(function(a){this.send(a)}.bind(this)),a=[],b=!1)},start:function(a){if(this._startTransaction)return void(g("DEBUG")&&console.log("SigSession.start() already started/starting"));this._setupQueue(),g("DEBUG")&&console.log("SigSession.start() using config: ",a);var b=this.remoteEndpointID,c=null;if(a&&(this.remoteEndpointID=b=a.remoteEndpointID||b,this.protocols=a.protocols&&a.protocols.length>0?a.protocols:this.protocols,c=a.payload||null),this.state="starting",!b)throw new Error("remoteEndpointID is required in start() or SigSession() instantiation");this.message||(this.message=this.createMessage("START_SESSION",c),this.appContext&&(this.message.appContext=this.appContext));var d=function(a){g("DEBUG")&&console.log(this+".sessionStarted!  ",a),this.state="started",a.fromEndpointID!==this.remoteEndpointID&&(g("DEBUG")&&console.log(this+".sessionStarted! remoteEndpointID reset:"+a.fromEndpointID),this.remoteEndpointID=a.fromEndpointID),this._startTransaction=null,this.referralTransaction&&this.referralTransaction.finish(this.endpointconnector.createResponse("REFER")),this.emit("started",a.payload)},e=function(a){this._startTransaction=null;var b=a&&a.reason?a.reason:"Session Start failed for unknown reason";if(this.referralTransaction){var c=this.endpointconnector.createResponse("REFER");c.result="FAILURE",c.reason=b,this.referralTransaction.finish(c)}this.state="stopped",console.error("Session Start Failed: ",b),this.emit("failed",b)};return this._startTransaction=this.endpointconnector.createTransaction({message:this.message,timeout:this.initialTimeout},d.bind(this),e.bind(this)),this._startTransaction.toTopic=this.toTopic||null,this._startTransaction.on("message",this.processMessage.bind(this)),this._startTransaction.on("finished",function(){this._startTransaction=null}.bind(this)),this._startTransaction.start(),this},respond:function(a,b){a&&"boolean"!=typeof a&&(b=a,a=!0),a="undefined"!=typeof a?a:!0,g("DEBUG")&&console.log(this+".respond() Respond called with SUCCESS",a),g("DEBUG")&&console.log(this+".respond() Respond called with message",b),g("DEBUG")&&console.log(this+".respond() Respond called using this",this);var c=null;if(this._startTransaction){c=this.endpointconnector.createResponse("START_SESSION"),c.transID=this._startTransaction.id,c.sigSessID=this.id;var d=this.endpointconnector.createResponse("REFER");a?(c.result="SUCCESS",c.payload=b&&b.payload?b.payload:b,this.state="started"):(c.result="FAILURE",c.reason=b||"Unknown",d.result="FAILURE",d.reason=b||"Unknown",this.state="failed"),this.referralTransaction&&this.referralTransaction.finish(d),this._startTransaction.finish(c),this.emit(this.state)}else console.error("NO TRANSACTION TO RESPOND TO.")},fail:function(a){g("DEBUG")&&console.log(this+".fail() Failing the START session. Reason: "+a),this.start(),this.respond(!1,a)},pranswer:function(a,b){"number"==typeof a&&(b=a,a=null);var c=this.createMessage("PRANSWER",a);b&&(c.holdTimeout=b),this.state="pranswer",this.send(c,1e3*b||this.finalTimeout),this.emit("pranswer")},stop:function(){var a=this.createMessage("STOP_SESSION");g("DEBUG")&&console.log(this+".stop() stopping...",a),this.endpointconnector.send({message:a,toTopic:this.toTopic}),this._startTransaction&&this._startTransaction.cancel(),this.state="stopped",this.emit("stopped"),this.emit("finished")},send:function(a,b){var c=null;c=a&&a.rtcommVer&&a.method?a:this.createMessage(a);var d=this._startTransaction||null,e=!("started"===this.state||"have_pranswer"===this.state||"pranswer"===this.state);e&&"MESSAGE"===c.method?(g("DEBUG")&&console.log(this+".send() Queueing message: ",c),this._messageQueue.messages.push(c)):d?(g("DEBUG")&&console.log(this+".send() Sending using transaction["+d.id+"]",c),b&&d.setTimeout(b),d.send(c)):(g("DEBUG")&&console.log(this+".send() Sending... ["+this.state+"]",c),c.hasOwnProperty("transID")&&delete c.transID,this.endpointconnector.send({message:c,toTopic:this.toTopic}))},createMessage:function(a,b){"object"==typeof a&&(b=a,a="MESSAGE");var c=this.endpointconnector.createMessage(a);return c.toEndpointID=this.remoteEndpointID,c.sigSessID=this.id,c.protocols=this.protocols,b&&(b=b.payload?b.payload:b),b&&(c.payload=b),g("DEBUG")&&console.log(this+".createMessage() Created message: ",c),c},getState:function(){return this.state},processMessage:function(a){switch(g("DEBUG")&&console.log(this+".processMessage() received message: ",a),this.toTopic=a.fromTopic!==this.toTopic?a.fromTopic:this.toTopic,a.method){case"PRANSWER":g("TRACE")&&console.log("PRANSWER --> "+a.holdTimeout+"="+("undefined"==typeof a.holdTimeout)+" - "+this.finalTimeout);var b="undefined"==typeof a.holdTimeout?this.finalTimeout:1e3*a.holdTimeout;g("TRACE")&&console.log("PRANSWER, resetting timeout to :",b),this._startTransaction&&this._startTransaction.setTimeout(b),a.holdTimeout||a.queuePosition?(this.state="queued",this.emit("queued",{queuePosition:a.queuePosition,message:a.payload})):(this.state="have_pranswer",this.protocols=a.protocols,this.emit("have_pranswer",{protocols:this.protocols,payload:a.payload}));break;case"ICE_CANDIDATE":this.emit("ice_candidate",a.payload);break;case"STOP_SESSION":this.state="stopped",this._startTransaction&&this._startTransaction.cancel(),this.emit("stopped",a.payload),this.emit("finished");break;case"MESSAGE":g("DEBUG")&&console.log("Emitting event [message]",a.payload),this.emit("message",a.payload);break;default:console.error("Unexpected Message, dropping... ",a)}}};return a}());var q=function(a,b,c){var d,e,f;this.defaultTimeout=5e3,a&&(d=a.message||null,e=a.timeout||null,f=a.toTopic||null),this.objName="Transaction",this.events={message:[],timeout_changed:[],canceled:[],finished:[]},this.timeout=e||this.defaultTimeout,this.outbound=d&&d.transID?!1:!0,this.id=d&&d.transID?d.transID:h(),this.method=d&&d.method?d.method:"UNKNOWN",this.toTopic=f||(d&&d.fromTopic?d.fromTopic:null),this.message=d,this.onSuccess=b||function(a){g("DEBUG")&&console.log(this+" Response for Transaction received, requires callback for more information:",a)},this.onFailure=c||function(a){g("DEBUG")&&console.log(this+" Transaction failed, requires callback for more information:",a)},g("DEBUG")&&console.log(this+".constructor Are we outbound?",this.outbound)};return q.prototype=a.RtcommBaseObject.extend({setTimeout:function(a){this.timeout=a||this.defaultTimeout,this.emit("timeout_changed",this.timeout)},getInbound:function(){return!this.outbound},start:function(){g("TRACE")&&console.log(this+".start() Starting Transaction for ID: "+this.id),this.outbound?(this.message.transID=this.id,this.send(this.message)):g("TRACE")&&console.log(this+".start() Inbound Transaction ")},send:function(a){g("TRACE")&&console.log(this+".send() sending message: "+a),a?(a.transID=a.transID||this.id,g("DEBUG")&&console.log("Transaction.send() ids..."+a.transID+" this.id "+this.id+"toTopic: "+this.toTopic),a.transID===this.id?this.endpointconnector.send({message:a,toTopic:this.toTopic}):g("DEBUG")&&console.log(this+".send() Message is not part of our tranaction, dropping!",a)):console.error("Transaction.send() requires a message to be passed")},finish:function(a){g("DEBUG")&&console.log(this+".finish() Finishing transction with message:",a),a.transID=a.transID||this.id,this.id===a.transID&&"RESPONSE"===a.method&&this.method===a.orig?(this.outbound?"SUCCESS"===a.result&&this.onSuccess?this.onSuccess(a):"FAILURE"===a.result&&this.onFailure?this.onFailure(a):console.error("Unknown result for RESPONSE:",a):this.send(a),this.emit("finished")):console.error("Message not for this transaction: ",a)},cancel:function(){this.emit("canceled")}}),c}),function(a,b){"function"==typeof define&&define.amd?define(["./connection","./util"],function(c,d){return a.returnExportsGlobal=b(c,d)}):"object"==typeof exports?module.exports=b(require("./connection"),require("./util")):(a.rtcomm=a.rtcomm||{},a.rtcomm.EndpointProvider=b(rtcomm.connection,rtcomm.util))}(this,function(a,b){var c=new b.Log,d=c.s,e=c.g,f=c.l,g=b.generateUUID,h=(b.generateRandomBytes,b.validateConfig,b.applyConfig),i=b.setConfig,j=(c.log,function(){var a=function(a){var b=function(b){return{chat:{message:b,from:a.userid}}};this._={},this._.objName="Chat",this.id=a.id,this._.parentConnected=!1,this._.enabled=!1,this.onEnabledMessage=null,this.onDisabledMessage=null,this.state="disconnected",this.dependencies={parent:a||null},this.events={message:[],ringing:[],connected:[],alerting:[],disconnected:[]},this.enable=function(c){var d=!1;return"object"==typeof c&&("boolean"==typeof c.connect&&(d=c.connect),c=c.message?c.message:null),f("DEBUG")&&console.log(this+".enable() - message --> "+c),f("DEBUG")&&console.log(this+".enable() - connect --> "+d),f("DEBUG")&&console.log(this+".enable() - current state --> "+this.state),this.onEnabledMessage=c||b(a.userid+" has initiated a Chat with you"),this._.enabled=!0,a.sessionStarted()?(f("DEBUG")&&console.log(this+".enable() - Session Started, connecting chat"),this._connect()):d?this._connect():(f("DEBUG")&&console.log(this+".enable() - Session not starting, may respond, but also connecting chat"),a._.activeSession&&(a._.activeSession.respond(),this._setState("connected"))),this},this.accept=function(a){return f("DEBUG")&&console.log(this+".accept() -- accepting -- "+this.state),"alerting"===this.state?(this.enable(a||"Accepting chat connection"),!0):!1},this.reject=function(){},this.disable=function(c){return this._.enabled&&(this._.enabled=!1,this.onDisabledMessage=c||b(a.userid+" has left the chat"),this.send(this.onDisabledMessage),this._setState("disconnected")),null},this.enabled=function(){return this._.enabled},this.send=function(c){c=c&&c.payload?c.payload:c,c=c&&c.chat?c:b(c),a._.activeSession&&a._.activeSession.send(c)},this.connect=function(){this.dependencies.parent.autoEnable?this.enable({connect:!0}):this._connect()},this._connect=function(){var a=this,b=null,c=a.dependencies.parent;if(c.sessionStarted())b=this.send.bind(this);else{if(!c._.activeSession)throw new Error(a+"._connect() unable to find a sendMethod");b=c._.activeSession.start.bind(c._.activeSession)}return this._.enabled?(this.onEnabledMessage&&b({payload:this.onEnabledMessage}),this._setState("connected"),!0):(f("DEBUG")&&console.log(this+"_connect() !!!!! not enabled, skipping..."),!1)},this._processMessage=function(a){var b=this.dependencies.parent;return"connected"===this.state?this.emit("message",a):"alerting"===this.state?f("DEBUG")&&console.log(this+"_processMessage() Dropping message -- unable to receive in alerting state"):b.sessionStopped()||(b._.activeSession&&b._.activeSession.pranswer(),this._setState("alerting",a)),this},this._setState=function(a,b){f("DEBUG")&&console.log(this+"._setState() setting state to: "+a);var c=this.state;try{this.state=a,this.emit(a,b)}catch(d){console.error(d),console.error(this+"._setState() unsupported state: "+a),this.state=c}},this.getState=function(){return this.state}};return a.prototype=b.RtcommBaseObject.extend({}),a}()),k=function(){var c="RtcommEndpointProvider Missing Dependency: ";if(!b)throw new Error(c+"rtcomm.util");if(!a)throw new Error(c+"rtcomm.connection");this.config={},this.dependencies={},this._={},this._.queues=new r,this._.services=null,this._.endpointRegistry=new l,this._.presenceMonitor=null,this._.objName="EndpointProvider",this._.rtcommEndpointConfig={},this.ready=!1,this.events={newendpoint:[],queueupdate:[],presence_updated:[],reset:[]},this.init=function(a,c,d){var e=null,h="/rtcomm/",j="undefined"!=typeof location&&"https:"===location.protocol?!0:!1,k={required:{server:"string",port:"number"},optional:{credentials:"object",rtcommTopicPath:"string",managementTopicName:"string",presence:"object",userid:"string",useSSL:"boolean",monitorPresence:"boolean",requireRtcommServer:"boolean",createEndpoint:"boolean",appContext:"string"},defaults:{rtcommTopicPath:h,managementTopicName:"management",presence:{rootTopic:"sphere/",topic:"/"},useSSL:j,appContext:"rtcomm",port:j?8883:1883,monitorPresence:!1,requireRtcommServer:!0,createEndpoint:!1}};if(!a)throw new Error("EndpointProvider initialization requires a minimum configuration: "+JSON.stringify(k.required));{var l=this.config&&this.config.appContext?this.config.appContext:null,m=this.config&&this.config.userid?this.config.userid:null;this.config&&this.config.presence?this.config.presence:null}e=this.config=i(a,k),this.config.appContext=a.appContext?a.appContext:l?l:this.config.appContext,this.setUserID(a.userid?a.userid:m?m:this.config.userid,!0);var n=this;c=c||function(a){f("DEBUG")&&console.log(n+".init() Default Success message, use callback to process:",a)},d=d||function(a){f("DEBUG")&&console.log(n+".init() Default Failure message, use callback to process:",a)},f("DEBUG")&&console.log(this+".init() Using config ",e);var o=b.makeCopy(e);o.hasOwnProperty("createEndpoint")&&delete o.createEndpoint,o.hasOwnProperty("monitorPresence")&&delete o.monitorPresence,o.hasOwnProperty("requireRtcommServer")&&delete o.requireRtcommServer,o.publishPresence=!0,this.ready&&(f("DEBUG")&&console.log(this+".init() Re-initializing with a new connection"),this.dependencies.endpointConnection&&this.dependencies.endpointConnection.destroy());var p=this.dependencies.endpointConnection=g.call(this,o),q=function(){f("DEBUG")&&console.log(n+".onSuccess() called ");var a={ready:!0,endpoint:null,registered:!1};this.ready=!0,e.createEndpoint&&(a.endpoint=n.createRtcommEndpoint()),e.userid&&(f("DEBUG")&&console.log(n+".init() publishing presence: "+e.userid+"|"+e.appContext),n.publishPresence(),e.monitorPresence&&n.getPresenceMonitor("/"),a.registered=!0),n._.presenceMonitor&&n._.presenceMonitor.setEndpointConnection(p),n.setUserID(e.userid,!0),e.requireRtcommServer?(f("DEBUG")&&console.log(n+".onSuccess() require a server, executing serviceQuery..."),p.serviceQuery(function(){console.log("returnObj?",a),c(a)},r.bind(n))):c(a)},r=function(a){this.ready=!1,"CONNLOST"===a.name?this.reset("Connection Lost"):"MULTIPLE_SERVERS"===a.name?this.reset(a.message):d(a)};return p.connect(q.bind(this),r.bind(this)),this},this.stop=this.destroy,this.start=this.init,this.reset=function(a){console.error(this+".reset() called reason: "+a);var b=this;b.emit("reset",{reason:a}),setTimeout(function(){b.destroy()},500)};var g=function(b){var c=this,d=new a.EndpointConnection(b);return this._.endpointRegistry.length()>0&&this._.endpointRegistry.list().forEach(function(a){a.setEndpointConnection(d)}),d.setLogLevel(e()),d.on("servicesupdate",function(a){c._.services=a,c.updateQueues()}),d.on("newsession",function(a){if(a){f("DEBUG")&&console.log(c+"-on.newsession Handle a new incoming session: ",a),f("DEBUG")&&console.log(c+"-on.newsession endpointRegistry: ",c._.endpointRegistry.list());var b=c._.endpointRegistry.getOneAvailable();if(b)f("DEBUG")&&console.log(c+"-on.newsession giving session to Existing Endpoint: ",b),b.newSession(a);else if(c.hasEventListener("newendpoint"))b=c.getRtcommEndpoint(),f("DEBUG")&&console.log(c+"-on.newsession Created a NEW endpoint for session: ",b),b.newSession(a),c.emit("newendpoint",b);else{var d=c._.endpointRegistry.list();d.length>1?(a.start(),a.fail("Unable to accept inbound call: Busy"),console.error(c+"-on.newsession - Rejecting session, ambiguous enpdoint selection; add newendpoint callback? ")):d[0].newSession(a)}}else console.error(c+"-on.newsession - expected a session object to be passed.")}),d.on("message",function(a){a&&f("TRACE")&&console.log("TODO:  Handle an incoming message ",a)}),d.on("document_replaced",function(a){f("TRACE")&&console.log("Document Replaced event received",a),c.reset("document_replaced")}),d};this.setRtcommEndpointConfig=function(a){this._.rtcommEndpointConfig=b.combineObjects(a,this._.rtcommEndpointConfig)},this.getRtcommEndpoint=function(a){var c=this,d=null,e=null,g={chat:!0,webrtc:!0,autoEnable:!1,parent:this};if(a&&"object"!=typeof a)d=a,f("DEBUG")&&console.log(this+".getRtcommEndpoint() Looking for endpoint: "+d),e=this._.endpointRegistry.get(d)[0],f("DEBUG")&&console.log(this+".getRtcommEndpoint() found endpoint: ",e);else{if("undefined"==typeof this.config.appContext)throw new Error("Unable to create an Endpoint without appContext set on EndpointProvider");var i=b.combineObjects(this._.rtcommEndpointConfig,g),j={};Object.keys(i).forEach(function(a){"function"==typeof i[a]&&(j[a]=i[a],delete i[a])}),h(a,i),i.appContext=this.config.appContext,i.userid=this.config.userid,f("DEBUG")&&console.log(this+".getRtcommEndpoint using config: ",i),e=new s(i),this.dependencies.endpointConnection&&e.setEndpointConnection(this.dependencies.endpointConnection),e.on("destroyed",function(a){c._.endpointRegistry.remove(a.endpoint)}),e=this._.endpointRegistry.add(e),f("DEBUG")&&console.log("ENDPOINT REGISTRY: ",this._.endpointRegistry.list()),Object.keys(j).forEach(function(a){if("function"==typeof j[a])try{"bubble"===a?e.bubble(j[a]):e.on(a,j[a])}catch(b){console.error(b),console.error("Invalid event in rtcommEndpointConfig: "+a)}})}return e},this.createRtcommEndpoint=this.getRtcommEndpoint,this.getMqttEndpoint=function(){return new m({connection:this.dependencies.endpointConnection})},this.getPresenceMonitor=function(a){this._.presenceMonitor=this._.presenceMonitor||new q({connection:this.dependencies.endpointConnection}),this.ready&&a&&this._.presenceMonitor.add(a);var b=this;return this._.presenceMonitor.on("updated",function(a){b.emit("presence_updated",{presenceData:a})}),this._.presenceMonitor},this.destroy=function(){this.leaveAllQueues(),this.clearEventListeners(),this._.endpointRegistry.destroy(),this._.presenceMonitor&&this._.presenceMonitor.destroy(),this._.presenceMonitor=null,f("DEBUG")&&console.log(this+".destroy() Finished cleanup of endpointRegistry"),this.dependencies.endpointConnection&&this.dependencies.endpointConnection.destroy(),this.dependencies.endpointConnection=null,f("DEBUG")&&console.log(this+".destroy() Finished cleanup of endpointConnection"),this.ready=!1},this.setAppContext=function(a){if(this.ready)throw new Error("Cannot change appContext once inited, using appContext: ",this.config.appContext);return f("DEBUG")&&console.log(this+".setAppContext() Setting appContext to: "+a),this.config.appContext=a,this},this.setUserID=function(a,b){if(!(!this.ready||this.ready&&b||/^GUEST/.test(this.config.userid)))throw new Error("Cannot change UserID in this state");return f("DEBUG")&&console.log(this+".setUserID() called with: "+a),a=this.getEndpointConnection()?this.getEndpointConnection().setUserID(a):a,f("DEBUG")&&console.log(this+".setUserID() Set userid to: "+a),this.config.userid=this._.id=a,this._.endpointRegistry.list().forEach(function(b){b.setUserID(a)}),f("DEBUG")&&console.log(this+".setUserID() Set userid to: "+a),this},this.publishPresence=function(a){var b={available:"available",unavailable:"unavailable",busy:"busy"},c=a&&a.state?b[a.state.trim()]||"available":"available";a=a||{},a.state=c;var d=this.getEndpointConnection().createPresenceDocument(a);return this.getEndpointConnection().publishPresence(d),this},this.updateQueues=function(){this._.queues.add(this._.services&&this._.services.RTCOMM_CALL_QUEUE_SERVICE&&this._.services.RTCOMM_CALL_QUEUE_SERVICE.queues||[]),this.emit("queueupdate",this._.queues.all()),f("DEBUG")&&console.log(this+".updateQueues() QUEUES: ",this._.queues.list())},this.joinQueue=function(a,b){var c=this._.queues.get(a);if(f("DEBUG")&&console.log(this+".joinQueue() Looking for queueid:"+a),c)return c.active=!0,c.callback=null,c.autoPause=b&&b.autoPause||!1,c.regex=this.dependencies.endpointConnection.subscribe(c.topic),!0;throw new Error("Unable to find queue("+a+") available queues: "+this._.queues.list())},this.leaveQueue=function(a){var b=this._.queues.get(a);return b&&!b.active?(f("DEBUG")&&console.log(this+".leaveQueue() - Not Active,  cannot leave."),!0):b?(b.active=!1,this.dependencies.endpointConnection.unsubscribe(b.topic),f("DEBUG")&&console.log(this+".leaveQueue() left queue: "+a),!0):(console.error(this+".leaveQueue() Queue not found: "+a),!1)},this.leaveAllQueues=function(){var a=this;this.listQueues().forEach(function(b){a.leaveQueue(b)})},this.getAllQueues=function(){return this._.queues.all()},this.listQueues=function(){return this._.queues.list()},this.getServices=function(){return this._.services},this.getUserID=function(){return this.config.userid},this.getEndpointConnection=function(){return this.dependencies.endpointConnection},this.setLogLevel=d,this.getLogLevel=e,this.endpoints=function(){return this._.endpointRegistry.list()},this.currentState=function(){return{ready:this.ready,events:this.events,dependencies:this.dependencies,"private":this._,config:this.config,queues:this.getAllQueues(),endpointRegistry:this._.endpointRegistry.list()}}};k.prototype=b.RtcommBaseObject.extend({});var l=function(a){function b(a){var b=[];return b=a?d("id",a):this.list()}function c(){var a=[];return this.list().forEach(function(b){b.available()&&a.push(b)}),a.length>0?a[a.length-1]:null}function d(a,b){if(m.indexOf(a)>-1){var c=[];switch(a){case"appContext":l.hasOwnProperty(b)&&Object.keys(l[b]).forEach(function(a){c.push(l[b][a])});break;case"id":Object.keys(l).forEach(function(a){l[a].hasOwnProperty(b)&&c.push(l[a][b])});break;default:this.list().forEach(function(d){d.hasOwnProperty(a)&&d[a]===b&&c.push(d)})}return c}return f("DEBUG")&&console.log("EndpointRegistry.findByProperty "+a+" not valid "),[]}function e(a){var b=null,c=null;if(a){if(m=Object.keys(a),b=a.appContext,c=a.id,l.hasOwnProperty(b)){var d=Object.keys(l[b]);return 1===d.length&&k?l[b][d[0]]:(l[b][c]=a,l[b][c])}return l[b]={},l[b][c]=a,l[b][c]}return null}function g(a){var b=null,c=null;return a&&j().length>0?(b=a.appContext,c=a.id,f("DEBUG")&&console.log("EndpointRegistry.remove() Trying to remove object",a),l.hasOwnProperty(b)&&l[b].hasOwnProperty(c)?(delete l[b][c],0===Object.keys(l[b]).length&&delete l[b],!0):(f("DEBUG")&&console.log("EndpointRegistry.remove() object not found",j()),!1)):!1}function h(){j().forEach(function(a){"function"==typeof a.destroy&&a.destroy(),g(a)})}function i(){return this.list().length}function j(){var a=[];return Object.keys(l).forEach(function(b){Object.keys(l[b]).forEach(function(c){a.push(l[b][c])})}),a}var k=a&&a.singleEndpoint?a.singleEndpoint:!1,l={},m=[];return{add:e,get:b,getOneAvailable:c,findByProperty:d,remove:g,destroy:h,length:i,list:j}},m=function(a){this.dependencies={connection:null},this.subscriptions={},this.dependencies.connection=a&&a.connection,this.events={message:[]}};m.prototype=b.RtcommBaseObject.extend({subscribe:function(a){this.subscriptions[a]=null;var b=this;b.dependencies.connection.subscribe(a,function(c){f("DEBUG")&&console.log("MqttEndpoint.subscribe() Received message["+c+"] on topic: "+a),b.emit("message",c)})},unsubscribe:function(a){var b=this;if(!this.subscriptions.hasOwnProperty(a))throw new Error("Topic not found:"+a);delete this.subscriptions[a],b.dependencies.connection.unsubscribe(a)},publish:function(a,b){this.dependencies.connection.publish(a,b)},destroy:function(){f("DEBUG")&&console.log("Destroying mqtt(unsubscribing everything... ");var a=this;Object.keys(this.subscriptions).forEach(function(b){a.unsubscribe(b)})}});var n=function(a){var b=null;return b=a.replace(/\/+/g,"/").replace(/\/$/g,""),/^\//.test(b)?b:"/"+b},o=function(a,b){this.objName="PresenceNode",this.name=a||"",this.record=b||!1,this.addressTopic=null,this.presenceTopic=null,this.nodes=[],this.id=this.name},p=function(a){var b=/^\/?(.+)$/.exec(a.trim());return b[1]?b[1].split("/"):[]};o.prototype=b.RtcommBaseObject.extend({update:function(){},flatten:function(){var a=[],b=[];return this.nodes.forEach(function(c){c.record?a.push(c):b=a.concat(c.flatten())}),b.length>0?b:a},getSubNode:function(a){var b=p(a),c=this.findSubNode(b);return c?c:this.createSubNode(b)},findNodeByName:function(a){f("TRACE")&&console.log(this+".findNodeByName() searching for name: "+a);var b=null;if(this.name===a&&(b=this),f("TRACE")&&console.log(this+".findNodeByName() searching nodes: ",this.nodes),!b)for(var c=0;c<this.nodes.length;c++){f("TRACE")&&console.log(this+".findNodeByName() searching node["+c+"]: ",this.nodes[c]);var d=this.nodes[c].findNodeByName(a);if(d){b=d;break}}return b},findSubNode:function(a){f("TRACE")&&console.log(this+".findSubNode() searching for nodes --> ",a);var b=null;if("/"===this.name&&"/"!==a[0]&&a.unshift("/"),f("TRACE")&&console.log(this+".findSubNode() this.name is: "+this.name),a[0]===this.name){var c=null;f("TRACE")&&console.log(this+".findSubNode() searching node "+a[0]+" for "+a[1]);for(var d=0;d<this.nodes.length;d++)if(this.nodes[d].name===a[1]){f("TRACE")&&console.log(this+".findSubNode() >>> We found "+a[1]),c=this.nodes[d].findSubNode(a.slice(1));break}a[1]?(f("TRACE")&&console.log(this+".findSubNode() >>> The match was found for: "+a[1]),b=c):b=this}else b=this;return f("DEBUG")&&console.log(this+".findSubNode() >>> RETURNING: ",b),b},createSubNode:function(a){if(f("TRACE")&&console.log(this+".createSubNode() Would created node for nodes --> ",a),a[0]===this.name){if(a.length>1){var b=this.findSubNode(a.slice(0,2));return b||(f("TRACE")&&console.log(this+".createSubNode() Creating Node: "+a[1]),b=new o(a[1]),this.nodes.push(b)),b.createSubNode(a.slice(1))}return f("TRACE")&&console.log(this+".createSubNode() Not Creating Node, return this: ",this),this}return null},deleteSubNode:function(a){var b=p(a),c=this.findSubNode(b);if(c){f("DEBUG")&&console.log(this+".deleteSubNode() Deleting Node: "+c.name);var d=this.findSubNode(b.slice(0,b.length-1));f("DEBUG")&&console.log(this+".deleteSubNode() Found parent: ",d);var e=d.nodes.indexOf(c);return d.nodes.splice(e,1),!0}return f("DEBUG")&&console.log(this+".deleteSubNode() Node not found for topic: "+a),!1},addPresence:function(a,b){var c=this.getSubNode(a);if(c.presenceTopic=a,f("DEBUG")&&console.log(this+".addPresence() created node: ",c),c.record=!0,"undefined"!=typeof b.self&&(c.self=b.self),b.content){var d=null;d="string"==typeof b.content?JSON.parse(b.content):b.content,c.alias=d.alias||null,c.state=d.state||"unknown",c.addressTopic=d.addressTopic||null,c.nodes=d.userDefines||[]}},removePresence:function(a){this.deleteSubNode(a)}});var q=function(a){this.objName="PresenceMonitor",this._={},this.config={},this.dependencies={connection:null},this._.rootNode=new o("/"),this._.presenceData=[this._.rootNode],this._.monitoredTopics={},this.dependencies.connection=a&&a.connection,this._.sphereTopic=a&&a.connection?n(a.connection.getPresenceRoot()):null,this.events={updated:[]}};q.prototype=b.RtcommBaseObject.extend(function(){function a(a){f("DEBUG")&&console.log("PresenceMonitor received message: ",a);var b=a.fromEndpointID,c=new RegExp("^"+this._.sphereTopic+"(.+)$");this.dependencies.connection.getMyPresenceTopic()===a.topic&&(a.self=!0);var d=c.exec(a.topic)[1],e=this.getRootNode();e?(a.content&&""!==a.content?e.addPresence(d,a):e.removePresence(d,b),this.emit("updated",this.getPresenceData())):f("DEBUG")&&console.error("No Root node... dropping presence message")}var c={add:function(b){b=n(b);var c=null,d=null,e=null;if(!this._.sphereTopic)throw new Error("Adding a topic to monitor requires the EndpointProvider be initialized");d=n(this._.sphereTopic+b+"/#");var f=b.split("/");if(c=""===f[0]?f[1]:f[0],e=this.getRootNode())e.getSubNode(b);else{var g=new o(c);g.getSubNode(b)}return this.dependencies.connection.subscribe(d,a.bind(this)),this._.monitoredTopics[b]=d,this},remove:function(a){if(a=n(a),!this.getRootNode().deleteSubNode(a))throw new Error("Topic not found: "+a);return this.dependencies.connection&&this.dependencies.connection.unsubscribe(this._.monitoredTopics[a]),delete this._.monitoredTopics[a],this},setEndpointConnection:function(a){var c=this;if(a){this.dependencies.connection=a,this._.sphereTopic=n(a.getPresenceRoot())||null,this._.rootNode.nodes=[];var d=b.makeCopy(this._.monitoredTopics);this._.monitoredTopics={},Object.keys(d).forEach(function(a){c.add(a)})}},_loadMockData:function(b){var c=this;f("DEBUG")&&console.log(this+"._loadMockData() mockMessages: ",b),b.forEach(function(b){f("DEBUG")&&console.log(c+"._loadMockData() loading message: ",b),a.call(c,b)})},find:function(){},getPresenceData:function(){return this._.presenceData},getRootNode:function(){return this._.rootNode},__getRootNode:function(a){var b=null,c=null,d=null,e=this._.presenceData,g=n(a).split("/");d=""===g[0]?g[1]:g[0];for(var h=0;h<e.length;h++){if(e[h].name===d){b=e[h];break}""===e[h].name&&(c=e[h])}return b=b?b:c?c:null,f("TRACE")&&console.log(this+".getRootNode() for topic:"+a+" found: ",b),b},destroy:function(){f("DEBUG")&&console.log("Destroying mqtt(unsubscribing everything... ");var a=this;this._.rootNode=null,this._.presenceData=[],Object.keys(a._.monitoredTopics).forEach(function(b){a.dependencies.connection&&a.dependencies.connection.unsubscribe(a._.monitoredTopics[b])})}};return c}());var r=function(){var a=function(a){var b=this;Object.keys(a).forEach(function(c){a.hasOwnProperty(c)&&(b[c]=a[c])}),this.topic=/#$/.test(a.topic)?a.topic:/\/$/.test(a.topic)?a.topic+"#":a.topic+"/#",this.active=!1,this.callback=null,this.paused=!1,this.regex=null,this.autoPause=!1},b={};this.add=function(c){c.forEach(function(c){b.hasOwnProperty[c.endpointID]||(b[c.endpointID]=new a(c))})},this.get=function(a){return b[a]||null},this.findByTopic=function(a){var c=[];if(Object.keys(b).forEach(function(d){f("DEBUG")&&console.log("Queues.findByTopic testing "+a+" against regex: "+b[d].regex),b[d].regex&&b[d].regex.test(a)&&c.push(b[d])}),1===c.length)return c[0];throw new Error("Multiple Queue matches for topic("+a+")- should not be possible")},this.all=function(){return b},this.list=function(){return Object.keys(b)}};r.prototype.toString=function(){this.list()};var s=function(){var a=function(a){var b=new j(a);return b.on("ringing",function(){"session:ringing"!==a.lastEvent&&a.emit("session:ringing")}),b.on("message",function(b){a.emit("chat:message",{message:b})}),b.on("alerting",function(b){f("DEBUG")&&console.log("RtcommEndpoint emitting session:alerting event");var c={};c.message=b,c.protocols="chat",a.setState("session:alerting",c)}),b.on("connected",function(){a.emit("chat:connected")}),b.on("disconnected",function(){a.emit("chat:disconnected")}),b},c=function(a){var b=null;return b=new t(a),"undefined"!=typeof cordova&&f("DEBUG")&&console.log(" Cordova Detected, we are a mobile hybrid app."),b.on("ringing",function(){f("DEBUG")&&console.log("on ringing - play a ringback tone ",a._.ringbackTone),a._playRingback(),"session:ringing"!==a.lastEvent&&a.emit("session:ringing")}),b.on("trying",function(){f("DEBUG")&&console.log("on trying - play a ringback tone ",a._.ringbackTone),a._playRingback(),"session:trying"!==a.lastEvent&&a.emit("session:trying")}),b.on("alerting",function(){a._playRingtone(),a.emit("session:alerting",{protocols:"webrtc"})}),b.on("connected",function(){f("DEBUG")&&console.log("on connected - stop ringing "),a._stopRing(),a.emit("webrtc:connected")}),b.on("disconnected",function(){f("DEBUG")&&console.log("on disconnected - stop ringing "),a._stopRing(),a.emit("webrtc:disconnected")}),b.on("remotemuted",function(b){a.emit("webrtc:remotemuted",b)}),b},d=function(d){this.config={autoEnable:!1,ignoreAppContext:!0,appContext:null,userid:null,ringtone:null,ringbacktone:null,chat:!0,chatConfig:{},webrtc:!0,webrtcConfig:{}},this.dependencies={endpointConnection:null},this._={objName:"RtcommEndpoint",activeSession:null,available:!0,uuid:g(),initialized:!1,disconnecting:!1,protocols:[],inboundMedia:null,attachMedia:!1,localStream:null,ringTone:null,ringbackTone:null,media:{In:null,Out:null}},this.lastEvent=null,this.state="session:stopped";var e=this;d&&Object.keys(d).forEach(function(a){e.config[a]=d[a]}),this.config.webrtc&&this._.protocols.push("webrtc"),this.config.chat&&this._.protocols.push("chat"),this._.ringTone=this.config.ringtone?b.Sound(this.config.ringtone).load():null,this._.ringbackTone=this.config.ringbacktone?b.Sound(this.config.ringbacktone).load():null,this.id=this._.uuid,this.userid=this.config.userid||null,this.appContext=this.config.appContext||null,this.webrtc=this.config.webrtc?c(this):null,this.config.autoEnable&&this.webrtc&&this.webrtc.enable(),this.chat=this.config.chat?a(this):null,this.chat&&this.chat.enable(),this.events={"session:started":[],"session:refer":[],"session:trying":[],"session:queued":[],"session:ringing":[],"session:alerting":[],"session:failed":[],"session:stopped":[],"webrtc:connected":[],"webrtc:disconnected":[],"webrtc:remotemuted":[],"webrtc:failed":[],"chat:message":[],"chat:connected":[],"chat:disconnected":[],destroyed:[],onetimemessage:[]}
};return d.prototype=b.RtcommBaseObject.extend(function(){function a(a,b){var c=null,d=null;if("object"==typeof a){if(!a.remoteEndpointID||!a.toTopic)throw new Error("Invalid object passed on connect! should be {remoteEndpointID: something, toTopic: something}");c=a.remoteEndpointID,d=a.toTopic}else c=a;f("DEBUG")&&console.log(b+" createSignalingSession context: ",b);var e=null;if(!c)throw new Error("remoteEndpointID must be set");var g=b.dependencies.endpointConnection.createSession({id:e,toTopic:d,protocols:b._.protocols,remoteEndpointID:c,appContext:b.config.appContext});return g}function c(a,b){return b.on("have_pranswer",function(b){a.setState("session:ringing"),a._processMessage(b)}),b.on("queued",function(b){f("DEBUG")&&console.log("SigSession callback called to queue: ",b);var c=0;"undefined"!=typeof b.queuePosition?(c=b.queuePosition,a.setState("session:queued",{queuePosition:c}),b=b.message?b.message:b):(a.setState("session:queued"),a._processMessage(b))}),b.on("message",function(b){f("DEBUG")&&console.log("SigSession callback called to process content: ",b),a._processMessage(b)}),b.on("started",function(b){b&&a._processMessage(b),a.setState("session:started")}),b.on("stopped",function(){f("DEBUG")&&console.log(a+" SigSession callback called to process STOPPED: "+a.getState()),"session:stopped"!==a.getState()&&(a.setState("session:stopped"),a.disconnect())}),b.on("starting",function(){a.setState("session:trying")}),b.on("failed",function(b){a.disconnect(),a.setState("session:failed",{reason:b})}),f("DEBUG")&&console.log(a+" createSignalingSession created!",b),!0}var d={getAppContext:function(){return this.config.appContext},newSession:function(a){var d=null;if(this.config.ignoreAppContext||a.appContext&&a.appContext===this.getAppContext()||"undefined"==typeof a.appContext)if(this.available()){this._.activeSession=a,c(this,a);var e=b.commonArrayItems(this._.protocols,a.protocols);f("DEBUG")&&console.log(this+".newSession() common protocols: "+e),a.referralTransaction?(f("DEBUG")&&console.log(this+".newSession() REFER"),a.protocols=this._.protocols,this.setState("session:refer")):e.length>0?(a.start({protocols:e}),a.message&&a.message.payload?this._processMessage(a.message.payload):(a.pranswer(),this.setState("session:alerting",{protocols:e}))):(f("DEBUG")&&console.log(this+".newSession() No common protocols"),a.fail("No common protocols")),this.available(!1)}else d="Busy",f("DEBUG")&&console.log(this+".newSession() "+d),a.fail("Busy");else d="Client is unable to accept a mismatched appContext: ("+a.appContext+") <> ("+this.getAppContext()+")",f("DEBUG")&&console.log(this+".newSession() "+d),a.fail(d)},_processMessage:function(a){var b,c=this;if(a&&a.protocols&&(b=a.protocols,a=a.payload),a){for(var d in a)if(a.hasOwnProperty(d))switch(d){case"chat":this.config.chat?(a.webrtc&&this.chat._setState("connected"),this.chat._processMessage(a[d])):console.error("Received chat message, but chat not supported!",a[d]);break;case"webrtc":this.config.webrtc&&this.webrtc?this.webrtc.enabled()?c.webrtc._processMessage(a[d]):this.webrtc.enable({connect:!1},function(b){b&&c.webrtc._processMessage(a[d])}):console.error("Received chat message, but chat not supported!",a[d]);break;case"otm":this.emit("onetimemessage",{onetimemessage:a[d]});break;default:console.error(this+" Received message, but unknown protocol: ",d)}}else f("DEBUG")&&console.log(this+" Received message, but nothing to do with it",a)},_playRingtone:function(){this._.ringTone&&this._.ringTone.play()},_playRingback:function(){this._.ringbackTone&&this._.ringbackTone.play()},_stopRing:function(){f("DEBUG")&&console.log(this+"._stopRing() should stop ring if ringing... ",this._.ringbackTone),f("DEBUG")&&console.log(this+"._stopRing() should stop ring if ringing... ",this._.ringTone),this._.ringbackTone&&this._.ringbackTone.playing&&this._.ringbackTone.stop(),this._.ringTone&&this._.ringTone.playing&&this._.ringTone.stop()},available:function(a){return"boolean"==typeof a?(this._.available=a,f("DEBUG")&&console.log(this+".available() setting available to "+a),a):this._.available},connect:function(b){if(!this.ready())throw new Error("Unable to connect endpoint until EndpointProvider is initialized");this.available(!1),this._.disconnecting=!1,this._.activeSession||(this._.activeSession=a(b,this),c(this,this._.activeSession)),this.setState("session:trying");var d=null;return this.config.chat&&this.chat.enabled()&&(d=this.chat.onEnabledMessage),this.config.webrtc&&this.webrtc.connect(d)?(this.chat.enabled()&&this.chat._setState("connected"),f("DEBUG")&&console.log(this+".connect() initiating with webrtc.enable({connect:true})")):this.config.chat&&this.chat.enable({connect:!0})?f("DEBUG")&&console.log(this+".connect() initiating with chat.enable({connect:true})"):(f("DEBUG")&&console.log(this+".connect() sending startMessage w/ no content"),this._.activeSession.start()),this},disconnect:function(){return f("DEBUG")&&console.log(this+".disconnect() Entry"),this._.disconnecting?f("DEBUG")&&console.log(this+".disconnect() in progress, cannot disconnect again"):(f("DEBUG")&&console.log(this+".disconnect() Starting disconnect process"),this._.disconnecting=!0,this.webrtc&&this.webrtc.disable(),this.chat&&this.chat.disable(),this.sessionStopped()?this._.activeSession=null:(this._.activeSession.stop(),this._.activeSession=null,this.setState("session:stopped")),this.config.autoEnable&&this.webrtc&&this.webrtc.enable(),this._.disconnecting=!1,this.available(!0)),f("DEBUG")&&console.log(this+".disconnect() Exit"),this},accept:function(a){return"session:refer"===this.getState()?this.connect(null):this.webrtc&&this.webrtc&&this.webrtc.accept(a)?f("DEBUG")&&console.log(this+".accept() Accepted in webrtc."):this.chat&&this.chat.accept(a)?f("DEBUG")&&console.log(this+".accept() Accepted in chat."):(f("DEBUG")&&console.log(this+".accept() accepting generically."),this.sessionStarted()||this._.activeSession.respond()),this},reject:function(){return f("DEBUG")&&console.log(this+".reject() invoked "),this._stopRing(),this.webrtc.reject(),this.chat.reject(),this._.activeSession&&this._.activeSession.fail("The user rejected the call"),this.available(!0),this._.activeSession=null,this},sendOneTimeMessage:function(a){f("DEBUG")&&console.log(this+".sendOneTimeMessage() sending "+a);var b={};if(!this.sessionStarted())throw new Error("Unable to send onetimemessage.  Session not started");b.otm="object"==typeof a?a:{message:a},f("DEBUG")&&console.log(this+".sendOneTimeMessage() sending ",b),this._.activeSession.send(b)},getRtcommConnectorService:function(){return this.dependencies.endpointConnection.services.RTCOMM_CONNECTOR_SERVICE},setEndpointConnection:function(a){var b=this.webrtc;b&&b.setIceServers(a.services.RTCOMM_CONNECTOR_SERVICE),this.dependencies.endpointConnection=a,this.dependencies.endpointConnection.on("servicesupdate",function(a){f("DEBUG")&&console.log("setEndpointConnection: resetting the ice servers to "+a.RTCOMM_CONNECTOR_SERVICE),b&&b.setIceServers(a.RTCOMM_CONNECTOR_SERVICE)})},getUserID:function(){return this.config.userid},setUserID:function(a){this.userid=this.config.userid=a},getState:function(){return this.state},ready:function(){var a=this.dependencies.endpointConnection?!0:!1;return a},sessionStarted:function(){return this._.activeSession&&"started"===this._.activeSession.getState()},sessionStopped:function(){var a=this._.activeSession?"stopped"===this._.activeSession.getState():!0;return a},getRemoteEndpointID:function(){return this._.activeSession?this._.activeSession.remoteEndpointID:"none"},getLocalEndpointID:function(){return this.userid},destroy:function(){f("DEBUG")&&console.log(this+".destroy Destroying RtcommEndpoint"),this.emit("destroyed"),this.disconnect(),f("DEBUG")&&console.log(this+".destroy() - detaching media streams"),f("DEBUG")&&console.log(this+".destroy() - Finished")},_Event:function(a,b){var c={eventName:"",endpoint:null};return f("DEBUG")&&console.log(this+"_Event -> creating event["+a+"], augmenting with",b),c.eventName=a,c.endpoint=this,"object"==typeof b&&Object.keys(b).forEach(function(a){c[a]=b[a]}),f("DEBUG")&&console.log(this+"_Event -> created event: ",c),c}};return d}()),d}(),t=function(){function a(a,b,d){var e=null;if(!c)throw new Error("No RTCPeerConnection Available - unsupported browser");return f("DEBUG")&&console.log(this+" Creating PeerConnection with RTCConfiguration: ",a),f("DEBUG")&&console.log(this+" Creating PeerConnection with RTCConstraints: ",b),e=new c(a,b),e.onicecandidate=function(a){if(f("DEBUG")&&console.log(this+".onicecandidate Event",a),a.candidate){if(this.config.trickleICE){f("DEBUG")&&console.log(this+".onicecandidate Sending Ice Candidate");var b={type:a.type,candidate:a.candidate};this.send(b)}}else f("DEBUG")&&console.log(this+".onicecandidate NULL Candidate.  trickleICE IS: "+this.config.trickleICE),this.config.trickleICE||(f("DEBUG")&&console.log(this+".onicecandidate Calling _notrickle callback"),this.emit("_notrickle"))}.bind(d),e.oniceconnectionstatechange=function(a){return null===this.pc?void(f("DEBUG")&&console.log(this+" oniceconnectionstatechange ICE STATE CHANGE fired but this.pc is null",a)):(f("DEBUG")&&console.log(this+" oniceconnectionstatechange ICE STATE CHANGE "+this.pc.iceConnectionState),void("closed"===this.pc.iceConnectionState||"disconnected"===this.pc.iceConnectionState?this._disconnect():"connected"===this.pc.iceConnectionState&&this._setState("connected")))}.bind(d),e.onaddstream=function(a){f("DEBUG")&&console.log(this+" onaddstream Remote Stream Arrived!",a),f("TRACE")&&console.log("TRACE onaddstream AUDIO",a.stream.getAudioTracks()),f("TRACE")&&console.log("TRACE onaddstream Video",a.stream.getVideoTracks()),d._.remoteStream=a.stream,d.getMediaIn()&&(f("DEBUG")&&console.log(this+" onaddstream Attaching inbound stream to: ",d.getMediaIn()),attachMediaStream(d.getMediaIn(),a.stream))}.bind(d),e.onnegotiationneeded=function(a){f("DEBUG")&&console.log("ONNEGOTIATIONNEEDED : Received Event - ",a),"stable"===this.pc.signalingState&&"CONNECTED"===this.getState()?this.pc.createOffer(function(a){this.pc.setLocalDescription(a,function(){this.send(a)}.bind(this),function(a){console.error(a)})}.bind(this),function(a){console.error(a)}):f("DEBUG")&&console.log("ONNEGOTIATIONNEEDED Skipping renegotiate - not stable && connected. State: "+this.pc.signalingState)}.bind(d),e.onsignalingstatechange=function(a){f("DEBUG")&&console.log(this+" peerConnection onsignalingstatechange fired: ",a)}.bind(d),e.onclosedconnection=function(a){f("DEBUG")&&console.log("FIREFOX peerConnection onclosedconnection fired: ",a)}.bind(d),e.onconnection=function(a){f("DEBUG")&&console.log("FIREFOX peerConnection onconnection fired: ",a)}.bind(d),e.onremovestream=function(a){return f("DEBUG")&&console.log("peerConnection onremovestream fired: ",a),null===this.pc?void(f("DEBUG")&&console.log("peerConnection onremovestream fired: ",a)):void 0}.bind(d),e}var c=null,d=null,e=null,g=function(a){var g={mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}};this.config=b.combineObjects(a.config.webrtcConfig,{RTCConfiguration:{iceTransports:"all"},RTCOfferConstraints:g,RTCConstraints:{optional:[{DtlsSrtpKeyAgreement:"true"}]},mediaIn:null,mediaOut:null,iceServers:[],lazyAV:!0,trickleICE:!0,connect:null,broadcast:{audio:!0,video:!0}}),this.dependencies={parent:a||null},this._={state:"disconnected",objName:"WebRTCConnection",parentConnected:!1,iceServers:[],paused:!1,enabled:!1},this.id=a.id,this.events={alerting:[],ringing:[],trying:[],connected:[],disconnected:[],remotemuted:[],_notrickle:[]},this.pc=null,this.onEnabledMessage=null,this.onDisabledMessage=null,"undefined"!=typeof cordova&&cordova.plugins&&cordova.plugins.iosrtc&&window&&window.device&&"iOS"===window.device.platform&&(f("DEBUG")&&console.log("Cordova IOSRTC Plugin enabled -- registering Globals!"),cordova.plugins.iosrtc.registerGlobals()),c="undefined"!=typeof RTCPeerConnection?RTCPeerConnection:null,d="undefined"!=typeof RTCSessionDescription?RTCSessionDescription:null,e="undefined"!=typeof RTCIceCandidate?RTCIceCandidate:null};g.prototype=b.RtcommBaseObject.extend(function(){var c={enable:function(c,d){var e=this,g=e.dependencies.parent;f("DEBUG")&&console.log(e+".enable()  --- entry --- config:",c),"function"==typeof c?(d=c,c=null):(b.applyConfig(c,e.config),d=d||function(a,b){f("DEBUG")&&console.log(e+".enable() default callback(success="+a+",message="+b)});var h=c&&"boolean"==typeof c.connect?c.connect:g.sessionStarted(),i=c&&"boolean"==typeof c.lazyAV?c.lazyAV:!0;if(this.setIceServers(),this._.enabled)f("DEBUG")&&console.log(e+".enable() already enabled");else{f("DEBUG")&&console.log(e+".enable() We are not enabled -- enabling");try{this.pc=a(this.config.RTCConfiguration,this.config.RTCConstraints,this),this._.enabled=!0}catch(j){throw new Error(j)}}return i||h||(f("DEBUG")&&console.log(e+".enable() lazyAV is false, calling enableLocalAV"),this.enableLocalAV(function(a,b){f("DEBUG")&&console.log(e+".enable() enableLocalAV Callback(success="+a+",message="+b),d(!0)})),h?(f("DEBUG")&&console.log(e+".enable() connect is true, connecting"),this._connect(d)):(f("DEBUG")&&console.log(e+".enable() connect is false; skipping connect"),d(!0)),this},disable:function(){return this._.enabled&&(f("DEBUG")&&console.log(this+".disable() disabling webrtc"),this._.enabled=!1,this._disconnect()),this},enabled:function(){return this._.enabled},connect:function(a){return this._connect(a)},_connect:function(a){var b=this,c=null,d=b.dependencies.parent;if(d.sessionStarted())c=this.send.bind(this);else{if(!d._.activeSession)throw new Error(b+"._connect() unable to find a sendMethod");c=d._.activeSession.start.bind(d._.activeSession)}var e=null;"function"!=typeof a&&(e=a,a=function(a,c){f("DEBUG")&&console.log(b+"._connect() default callback(success="+a+",message="+c)});var g=function(d,g){d?b.pc.createOffer(function(d){f("DEBUG")&&console.log(b+".enable() createOffer created: ",d),b.config.trickleICE?c({payload:b.createMessage(d,e)}):b.on("_notrickle",function(){f("DEBUG")&&console.log(b+".doOffer _notrickle called: Sending offer here. "),c({payload:b.createMessage(b.pc.localDescription,e)}),a(!0),b.off("_notrickle")}),b._setState("trying"),b.pc.setLocalDescription(d,function(){f("DEBUG")&&console.log("************setLocalDescription Success!!! "),b.config.trickleICE&&a(!0)},function(b){a(!1,b)})},function(b){console.error("webrtc._connect failed: ",b),a(!1,b)},b.config.RTCOfferConstraints):(a(!1,g),console.error("_connect failed, "+g))};return this._.enabled&&this.pc?(this.enableLocalAV(g),!0):!1},_disconnect:function(){return this.pc&&(f("DEBUG")&&console.log(this+"._disconnect() Signaling State is: "+this.pc.signalingState),("disconnected"!==this.pc.signalingState||"closed"!==this.pc.signalingState)&&(f("DEBUG")&&console.log(this+"._disconnect() Closing peer connection"),this.pc.close()),this.pc=null),h(this.getMediaIn()),this._.remoteStream=null,this._.localStream&&this._.localStream.stop(),this._.localStream=null,h(this.getMediaOut()),"disconnected"!==this.getState()&&this._setState("disconnected"),this},send:function(a){var b=this.dependencies.parent;a=a&&a.payload?a.payload:a,b._.activeSession&&b._.activeSession.send(this.createMessage(a))},accept:function(a){var b=this;a=a||function(a,c){f("DEBUG")&&console.log(b+".accept() default callback(success="+a+",message="+c)};var c=function(c,d){c?(f("DEBUG")&&console.log(this+".accept() -- doAnswer -- peerConnection? ",b.pc),f("DEBUG")&&console.log(this+".accept() -- doAnswer -- constraints: ",b.config.RTCOfferConstraints),b.pc&&b.pc.createAnswer(function(e){b._gotAnswer(e),a(c,d)},function(b){console.error("failed to create answer",b),a(!1,"Failed to create answer")},b.config.RTCOfferConstraints)):a(c,d)};return f("DEBUG")&&console.log(this+".accept() -- accepting --"),"alerting"===this.getState()?(this.enableLocalAV(c),!0):!1},reject:function(){this._disconnect()},getState:function(){return this._.state},_setState:function(a){f("DEBUG")&&console.log(this+"._setState to "+a),this._.state=a;var b=a;f("DEBUG")&&console.log(this+"._setState emitting event "+b),this.emit(b)},broadcastReady:function(){return(this.config.broadcast.audio||this.config.broadcast.video)&&"object"==typeof this._.localStream?!0:this.config.broadcast.audio===!1&&this.config.broadcast.video===!1?!0:!1},setBroadcast:function(a){return this.config.broadcast.audio=a.hasOwnProperty("audio")&&"boolean"==typeof a.audio?a.audio:this.config.broadcast.audio,this.config.broadcast.video=a.hasOwnProperty("video")&&"boolean"==typeof a.video?a.video:this.config.broadcast.video,this},mute:function(a){switch(a){case"audio":m(this._.localStream,this);break;case"video":o(this._.localStream,this);break;default:m(this._.localStream,this),o(this._.localStream,this)}var b=this.createMessage({type:"stream",stream:{label:this._.localStream.label,audio:"video"===a?!0:!1,video:"audio"===a?!0:!1}});this.send(b),this._.muted=!0},unmute:function(a){switch(a){case"audio":n(this._.localStream,this);break;case"video":p(this._.localStream,this);break;default:n(this._.localStream,this),p(this._.localStream,this)}var b=this.createMessage({type:"stream",stream:{label:this._.localStream.label,audio:"video"===a?!1:!0,video:"audio"===a?!1:!0}});this.send(b),this._.muted=!1},isMuted:function(){return this._.muted},getMediaIn:function(){return this.config.mediaIn},isReceivingAudio:function(){return i("remote","audio",this)},isReceivingVideo:function(){return i("remote","video",this)},isSendingAudio:function(){return i("local","audio",this)},isSendingVideo:function(){return i("local","video",this)},setMediaIn:function(a){if(!q(a))throw new TypeError("Media Element object is invalid");return"undefined"!=typeof this._.remoteStream?(this.config.mediaIn&&this.config.mediaIn!==a&&h(this.config.mediaIn),attachMediaStream(a,this._.remoteStream),this.config.mediaIn=a):(h(a),this.config.mediaIn=a),this},getMediaOut:function(){return this.config.mediaOut},setMediaOut:function(a){if(f("DEBUG")&&console.log(this+".setMediaOut() called with value: ",a),!q(a))throw new TypeError("Media Element object is invalid");return a.muted=!0,"undefined"!=typeof this._.localStream?(this.config.mediaOut&&this.config.mediaOut!==a&&h(this.config.mediaOut),attachMediaStream(a,this._.localStream),a.muted||(f("DEBUG")&&console.log(this+".setMediaOut() element is not muted, muting."),a.muted=!0),this.config.mediaOut=a):(h(a),this.config.mediaOut=a),this},_gotAnswer:function(a){f("DEBUG")&&console.log(this+".createAnswer answer created:  ",a);var b=null,c=this.pc.signalingState,d=this.dependencies.parent._.activeSession,e=d.getState(),g="have-remote-offer"===c&&"starting"===e,h="pranswer"===e||"have-local-pranswer"===c,i=!1,j=this.createMessage(a);f("DEBUG")&&console.log(this+".createAnswer._gotAnswer: pcSigState: "+c+" SIGSESSION STATE: "+e),h?this.config.trickleICE?(f("DEBUG")&&console.log(this+".createAnswer sending answer as a RESPONSE"),d.respond(!0,j),this._setState("connected")):this.on("_notrickle",function(){f("DEBUG")&&console.log(this+".createAnswer sending answer as a RESPONSE[notrickle]"),this.pc.localDescription?(d.respond(!0,this.createMessage(this.pc.localDescription)),this._setState("connected")):f("DEBUG")&&console.log(this+".createAnswer localDescription not set."),this.off("_notrickle")}.bind(this)):g?(f("DEBUG")&&console.log(this+".createAnswer sending PRANSWER"),this._setState("alerting"),b={},b.type="pranswer",b.sdp=this.pranswer?a.sdp:"",a={webrtc:b},d.pranswer(this.createMessage(a))):"connected"===this.getState()||"alerting"===this.getState()?(f("DEBUG")&&console.log(this+".createAnswer sending ANSWER (renegotiation?)"),d.send(j)):(i=!0,this._setState("alerting")),i=g&&b&&""===b.sdp||i,f("DEBUG")&&console.log("_gotAnswer: Skip setLocalDescription? "+i),i||this.pc.setLocalDescription(a,function(){f("DEBUG")&&console.log("setLocalDescription in _gotAnswer was successful",a)}.bind(this),function(a){console.error(a)})},createMessage:function(a,b){var c={webrtc:{}};return a&&(c.webrtc=a.hasOwnProperty("webrtc")?a.webrtc:a),b&&b.hasOwnProperty("chat")&&(c.chat=b.chat),c},_processMessage:function(a){var b=this,c=this.pc?!0:!1;if(a)if(f("DEBUG")&&console.log(this+"._processMessage Processing Message...",a),a.type)switch(a.type){case"pranswer":c&&"have-local-offer"===this.pc.signalingState&&(""!==a.sdp?c&&this.pc.setRemoteDescription(new d(a)):f("DEBUG")&&console.log(this+"._processMessage -- pranswer sdp is empty, not setting"),this._setState("ringing"));break;case"answer":f("DEBUG")&&console.log(this+"._processMessage ANSWERING",a),c&&this.pc.setRemoteDescription(new d(a),function(){f("DEBUG")&&console.log("Successfully set the ANSWER Description")},function(a){console.error("setRemoteDescription has an Error",a)}),this._setState("connected");break;case"offer":var g=a;f("DEBUG")&&console.log(this+"_processMessage received an offer -> State:  "+this.getState()),"disconnected"===this.getState()?b.pc.setRemoteDescription(new d(g),function(){f("DEBUG")&&console.log(this+" PRANSWER in processMessage for offer()"),b.dependencies.parent.sessionStarted()||b.dependencies.parent._.activeSession.pranswer({webrtc:{type:"pranswer",sdp:""}}),this._setState("alerting")}.bind(b),function(a){console.error("setRemoteDescription has an Error",a)}):"connected"===this.getState()?c&&this.pc.setRemoteDescription(new d(a),function(){this.pc.createAnswer(this._gotAnswer.bind(this),function(a){console.error("Failed to create Answer:"+a)})}.bind(this),function(a){console.error("setRemoteDescription has an Error",a)}):f("DEBUG")&&console.error(this+"_processMessage unable to process offer("+this.getState()+")",a);break;case"icecandidate":f("DEBUG")&&console.log(this+"_processMessage iceCandidate --> message:",a);try{f("DEBUG")&&console.log(this+"_processMessage iceCandidate -->",a.candidate);var h=new e(a.candidate);f("DEBUG")&&console.log(this+"_processMessage iceCandidate ",h),c&&this.pc.addIceCandidate(h)}catch(i){console.error("addIceCandidate threw an error",i)}break;case"stream":if(f("DEBUG")&&console.log(this+"_processMessage Remote media disabled --> message:",a),a.stream&&a.stream.label){for(var j=this.pc.getRemoteStreams(),k=0;k<j.length;k++)if(j[k].label===a.stream.label){var l=j[k];a.stream.audio?n(l,this):m(l,this),a.stream.video?p(l,this):o(l,this)}this.emit("remotemuted",a.stream)}break;default:console.error(this+"._processMessage() Nothing to do with this message:",a)}else f("DEBUG")&&console.log(this+"_processMessage Unknown Message",a)},setLocalMedia:function(a,b){var c=!1;f("DEBUG")&&console.log(this+"setLocalMedia() using config:",a),a&&"object"==typeof a?(a.mediaIn&&this.setMediaIn(a.mediaIn),a.mediaOut&&this.setMediaOut(a.mediaOut),a.broadcast&&this.setBroadcast(a.broadcast),c="boolean"==typeof a.enable?a.enable:c):a&&"function"==typeof a?b=a:f("DEBUG")&&console.log(this+"setLocalMedia() using defaults");var d=this.config.broadcast.audio,e=this.config.broadcast.video,g=this;return b=b||function(a,b){f("DEBUG")&&console.log(g+".setLocalMedia() default callback(success="+a+",message="+b)},f("DEBUG")&&console.log(g+".setLocalMedia() audio["+d+"] & video["+e+"], enable["+c+"]"),c&&this.enableLocalAV(b),this},enableLocalAV:function(a,b){var c,d,e=this;a&&"object"==typeof a?(c=a.audio,d=a.video,this.setBroadcast({audio:c,video:d})):(b="function"==typeof a?a:function(a,b){f("DEBUG")&&console.log(e+".enableLocalAV() default callback(success="+a+",message="+b)},c=this.config.broadcast.audio,d=this.config.broadcast.video);var g=function(a){return e.getMediaOut()&&"undefined"!=typeof a&&attachMediaStream(e.getMediaOut(),a),e.pc?e.pc.getLocalStreams()[0]===a?!0:(e._.localStream=a,e.pc.addStream(a),!0):(f("DEBUG")&&console.log(e+".enableLocalAV() -- No peerConnection available"),!1)};c||d?this._.localStream?(f("DEBUG")&&console.log(e+".enableLocalAV() already setup, reattaching stream"),b(g(this._.localStream))):navigator.getUserMedia({audio:c,video:d},function(a){k(a)!==c&&f("INFO")&&console.log(e+".enableLocalAV() requested audio:"+c+" but got audio: "+k(a)),l(a)!==d&&f("INFO")&&console.log(e+".enableLocalAV() requested video:"+d+" but got video: "+l(a)),b(g(a))},function(){b(!1,"getUserMedia failed - User denied permissions for camera/microphone")}):(f("DEBUG")&&console.log(e+".enableLocalAV() - nothing to do; both audio & video are false"),b(!0,"Not broadcasting anything"))},setIceServers:function(b){function c(a){var b=/^turn:(\S+)\@(\S+\:\d+):credential:(.+$)/.exec(a),c=b[1]||null,e=b[2]||null,g=b[3]||null,h={urls:null,username:null,credential:null};return c&&e&&g?(h.urls="turn:"+e,h.username=c,h.credential=g):(f("DEBUG")&&console.log(d+".setIceServers() Unable to parse the url into a Turn Server"),h=null),f("DEBUG")&&console.log(d+".setIceServers() built iceServer object: ",h),h}var d=this;f("DEBUG")&&console.log(this+".setIceServers() called w/ service:",b);var e=[],g=b&&b.iceURL?b.iceURL.split(","):this.config.iceServers;g.forEach(function(a){a=a.trim();var b=null;/^stun:/.test(a)?(f("DEBUG")&&console.log(d+".setIceServers() Is STUN: "+a),b={urls:a}):/^turn:/.test(a)?(f("DEBUG")&&console.log(d+".setIceServers() Is TURN: "+a),b=c(a)):f("DEBUG")&&console.error(d+".setIceServers() Failed to match anything, bad Ice URL: "+a),b&&e.push(b)}),this._.iceServers=0===e.length&&this._.iceServers.length>0?this._.iceServers:e,this.config.RTCConfiguration.hasOwnProperty(g)&&Array.isArray(this.config.RTCConfiguration.iceServers)&&this.config.RTCConfiguration.iceServers.length>0?f("DEBUG")&&console.log(this+".setIceServers() leaving RTCConfiguration alone "+this.config.RTCConfiguration.iceServers):(f("DEBUG")&&console.log(this+".setIceServers() updating RTCConfiguration: "+e),this.config.RTCConfiguration.iceServers=this._.iceServers),this.pc&&this._.enabled?"new"===this.pc.iceConnectionState?(f("DEBUG")&&console.log(this+".setIceServers() resetting peerConnection, state is: "+this.pc.iceConnectionState),this.pc=null,this.pc=a(this.config.RTCConfiguration,this.config.RTCConstraints,this)):f("DEBUG")&&console.log(this+".setIceServers() Not resetting peerConnection, state is: "+this.pc.iceConnectionState):(f("DEBUG")&&console.log(this+".setIceServers() Not resetting peerConnection this.pc: ",this.pc),f("DEBUG")&&console.log(this+".setIceServers() Not resetting peerConnection this._.enabled: ",this._.enabled))},getIceServers:function(){return this._.iceServers}};return c}());var h=function(a){a&&("undefined"!=typeof a.src?(f("DEBUG")&&console.log("detachMediaStream setting srcObject to empty string"),a.src=""):"undefined"!=typeof a.mozSrcObject?(f("DEBUG")&&console.log("detachMediaStream setting to null"),a.mozSrcObject=null):console.error("Error detaching stream from element."))},i=function(a,b,c){var d={remote:function(){return c.pc.getRemoteStreams()},local:function(){return c.pc.getLocalStreams()}},e={audio:function(a){return a.getAudioTracks()},video:function(a){return a.getVideoTracks()}},g=!1;if(c.pc&&a in d){var h=d[a]();f("DEBUG")&&console.log("hasTrack() streams -> ",h);for(var i=0;i<h.length;i++)for(var j=h[i],k=e[b](j),l=0;l<k.length;l++)g=g||k[l].enabled}return g},j=function(a,b,c){for(var d={audio:function(a){return a.getAudioTracks()},video:function(a){return a.getVideoTracks()}},e=d[b](a),f=0;f<e.length;f++)e[f].enabled=c;return a},k=function(a){return a.getAudioTracks().length>0},l=function(a){return a.getVideoTracks().length>0},m=function(a,b){j(a,"audio",!1,b)},n=function(a,b){j(a,"audio",!0,b)},o=function(a,b){j(a,"video",!1,b)},p=function(a,b){j(a,"video",!0,b)},q=function(a){return"undefined"!=typeof a.srcObject||"undefined"!=typeof a.mozSrcObject||"undefined"!=typeof a.src};return g}(),u=function(a){this.config={protocols:a||null},this.dependencies={endpointConnection:null},this._={referralSession:null,activeSession:null,appContext:null,available:!0},a&&Object.keys(a).forEach(function(b){this.config[b]=a[b]})};return u.prototype=b.RtcommBaseObject.extend(function(){function a(a,b){f("DEBUG")&&console.log("createSignalingSession context: ",b);var c=null,d=null;if(b._.referralSession){var e=b._.referralSession.referralDetails;c=e&&e.sessionID?e.sessionID:null,a=e&&e.remoteEndpointID?e.remoteEndpointID:null,d=e&&e.toTopic?e.toTopic:null}if(!a)throw new Error("toEndpointID must be set");var g=b.dependencies.endpointConnection.createSession({id:c,toTopic:d,remoteEndpointID:a,appContext:b._.appContext});return console.log("session: ",g),g}return{getAppContext:function(){return this._.appContext},newSession:function(a){var b=null,c=null;this.ignoreAppContext||a.appContext&&a.appContext===this.getAppContext()||"undefined"==typeof a.appContext&&"refer"===a.type?this.available()?(b="incoming","refer"===a.type&&(f("DEBUG")&&console.log(this+".newSession() REFER"),b="refer"),this._.activeSession=a,a.start(),a.message&&a.message.peerContent?(a.pranswer(),console.log("Should send message now to someone else...")):a.respond(),this.available(!1)):(c="Busy",f("DEBUG")&&console.log(this+".newSession() "+c),a.fail("Busy")):(c="Client is unable to accept a mismatched appContext: ("+a.appContext+") <> ("+this.getAppContext()+")",f("DEBUG")&&console.log(this+".newSession() "+c),a.fail(c))},available:function(a){return a?"boolean"==typeof a?(this._.available=a,a):void 0:this._.available},connect:function(b){this._.activeSession=a(b,this),this._.activeSession.start()},disconnect:function(){this._.activeSession.stop()},reject:function(){}}}()),k}),function(a,b){"function"==typeof define&&define.amd?define(["./rtcomm/EndpointProvider","./rtcomm/connection","./rtcomm/util"],function(c,d,e){return a.returnExportsGlobal=b(c,d,e)}):"object"==typeof exports?module.exports=b(require("./rtcomm/EndpointProvider"),require("./rtcomm/connection"),require("./rtcomm/util")):(a.rtcomm=a.rtcomm||{},a.rtcomm=b(rtcomm.EndpointProvider,rtcomm.connection,rtcomm.util))}(this,function(a,b,c){var d=function(){var d=function(){this.EndpointProvider=a,this.connection=b,this.util=c};return d.prototype=c.RtcommBaseObject.extend({}),new d}();return d});