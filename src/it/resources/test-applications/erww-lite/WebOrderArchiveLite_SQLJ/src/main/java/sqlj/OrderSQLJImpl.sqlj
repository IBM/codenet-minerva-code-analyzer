package sqlj;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.sql.DataSource;

#sql context OrderCtx;
#sql iterator MinIter(int);
#sql iterator OrderIter(int O_OL_CNT);
public class OrderSQLJImpl extends OrderSQLJ {

    public OrderSQLJImpl(DataSource ds) {
        super(ds);
    }

    @Override
    public int findMinOrderId(short warehouseID, short districtID) throws SQLException {
        // JPQL query: select min(o.OrderId) from OrderJPA o where o.CarrierId <> 0 and o.WarehouseId = :warehouseId and o.DistrictId = :districtId
        // SQL query:  select MIN(O_ID) from ORDERS where O_D_ID=1 AND O_W_ID=1
        Connection con = ds.getConnection();
        OrderCtx ctx = new OrderCtx(con);
        try {
            MinIter iter;
            #sql [ctx] iter = { SELECT MIN(O_ID) FROM CBIVP.ORDERS WHERE O_D_ID=:districtID AND O_W_ID=:warehouseID };
            ResultSet rs = iter.getResultSet();
            if (!rs.next())
                throw new SQLException("Query did not return any results for district=" + districtID + " AND warehouse=" + warehouseID);
            int minOrder = rs.getInt(1);
            rs.close();
            iter.close();
            return minOrder;
        } finally {
        	ctx.close();
        }
    }

    @Override
    public OrderSQLJ find(short districtID, int orderId, short warehouseID) throws SQLException {
        Connection con = ds.getConnection();
        OrderCtx ctx = new OrderCtx(con);
        try {
        	OrderIter iter;
        	#sql [ctx] iter = { SELECT O_OL_CNT FROM CBIVP.ORDERS WHERE O_D_ID=:districtID AND O_W_ID=:warehouseID AND O_ID=:orderId };
            OrderSQLJImpl obj = new OrderSQLJImpl(ds);
            obj.DistrictId = districtID;
            obj.OrderId = orderId;
            obj.WarehouseId = warehouseID;
            if (!iter.next())
                throw new SQLException("Did not find any order with query: " + "SELECT * FROM ORDERS" +
                                       " WHERE O_D_ID=" + districtID +
                                       " AND O_W_ID=" + warehouseID +
                                       " AND O_ID=" + orderId);
            obj.OrderLineCount = new BigDecimal(iter.O_OL_CNT());
            iter.close();
            return obj;
        } finally {
        	ctx.close();
        }
    }

    @Override
    public void remove(OrderSQLJ order) throws SQLException {
        Connection con = ds.getConnection();
        OrderCtx ctx = new OrderCtx(con);
        try {
        	short districtID = order.DistrictId;
        	short warehouseID = order.WarehouseId;
        	int orderID = order.OrderId;
        	#sql [ctx] { DELETE FROM CBIVP.ORDERS WHERE O_D_ID=:districtID AND O_W_ID=:warehouseID AND O_ID=:orderID };
        } finally {
        	ctx.close();
        }
    }
}
