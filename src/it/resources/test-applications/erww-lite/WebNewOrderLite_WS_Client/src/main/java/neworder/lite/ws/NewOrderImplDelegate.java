//
// Generated By:JAX-WS RI IBM 2.2.1-11/28/2011 08:27 AM(foreman)- (JAXB RI IBM 2.2.3-11/28/2011 06:17 AM(foreman)-)
//


package neworder.lite.ws;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;

@WebService(name = "NewOrderImplDelegate", targetNamespace = "http://ws.lite.neworder/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NewOrderImplDelegate {


    /**
     * 
     * @param input
     * @param output
     * @return
     *     returns neworder.lite.ws.NewOrderOutputInfo
     * @throws Exception_Exception
     * @throws SystemException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewOrder", targetNamespace = "http://ws.lite.neworder/", className = "neworder.lite.ws.CreateNewOrder")
    @ResponseWrapper(localName = "createNewOrderResponse", targetNamespace = "http://ws.lite.neworder/", className = "neworder.lite.ws.CreateNewOrderResponse")
    @Action(input = "http://ws.lite.neworder/NewOrderImplDelegate/createNewOrderRequest", output = "http://ws.lite.neworder/NewOrderImplDelegate/createNewOrderResponse", fault = {
        @FaultAction(className = SystemException_Exception.class, value = "http://ws.lite.neworder/NewOrderImplDelegate/createNewOrder/Fault/SystemException"),
        @FaultAction(className = Exception_Exception.class, value = "http://ws.lite.neworder/NewOrderImplDelegate/createNewOrder/Fault/Exception")
    })
    public NewOrderOutputInfo createNewOrder(
        @WebParam(name = "input", targetNamespace = "")
        NewOrderInputInfo input,
        @WebParam(name = "output", targetNamespace = "")
        NewOrderOutputInfo output)
        throws Exception_Exception, SystemException_Exception
    ;

}
